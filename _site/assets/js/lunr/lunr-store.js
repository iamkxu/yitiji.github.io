var store = [{
        "title": "软件安装教程",
        "excerpt":"  鸿之微“一体机”，致力于为您打造一流体验科学计算机。     如果您需要在自己已有服务器上安装鸿之微各计算软件，或者需要在鸿之微“一体机”上自行安装鸿之微各计算软件，请您参考本页中鸿之微各计算软件的安装教程，如果您有任何安装问题，请联系公司客服support@hzwtech.com。   其他常用软件安装     在鸿之微“一体机”上，您还来可以安装非常多的常用科学计算软件，如分子动力学Lammps，第一性原理VASP等。鸿之微“一体机”在出厂前已经为这些软件配置好了计算环境，并针对性对这些软件进行了硬件优化，您可以方便的在鸿之微“一体机”上进行您需要的科学计算。     本页中为您提供了常用软件的安装教程：      分子动力学-Lammps安装与使用    第一性原理-VASP安装与使用    任务管理Torque PBS安装与使用  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/config-introduce/",
        "teaser":null},{
        "title": "First安装教程",
        "excerpt":"First自动安装脚本     本页中为您提供了First自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装First。      First测试     ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/first-install/",
        "teaser":null},{
        "title": "分子动力学-Lammps安装教程",
        "excerpt":"Lammps自动安装脚本    本页中为您提供了Lammps自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装Lammps。   #!/bin/bash  # ---------- define the variables ---------- #  # directory of remote file server ftp_server_ip=\" \" ftp_file_path=\"pub\"  # prefix the module install path module_path=\"/public/modules-4.2.2\"  # ---------- install openmpi-1.8.5 for Lammps ---------- #  cd /software # 上传 openmpi-1.8.5.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/openmpi-1.8.5.tar.gz tar -zxvf openmpi-1.8.5.tar.gz cd openmpi-1.8.5 make distclean mkdir BUILD_Lammps cd BUILD_Lammps ../configure --prefix=/public/mpi/openmpi-1.8.5 make make install  # ---------- configure the openmpi-1.8.5 module enviroment ---------- #  cd $module_path/modulefiles mkdir -p mpi # 创建存放不同配置文件的文件夹 cd mpi  # 编辑openmpi-1.8.5的modulefile文件 cat &gt; openmpi-1.8.5 &lt;&lt; ! #%Module1.0 module-whatis   \"openmpi-1.8.5\" conflict  mpi prepend-path    PATH               /public/mpi/openmpi-1.8.5/bin prepend-path    LD_LIBRARY_PATH    /public/mpi/openmpi-1.8.5/lib/ ! #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc &lt;&lt;! module load mpi/openmpi-1.8.5 !  echo 'openmpi-1.8.5 for lammps install finished' &gt;&gt; /public/system_config/lammps_install.log  # ---------- install fftw-2.1.5 for lammps ---------- #  cd /software # 上传 fftw-2.1.5.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/fftw-2.1.5.tar.gz  tar -zxvf fftw-2.1.5.tar.gz cd fftw-2.1.5 mkdir BUILD_Lammps cd BUILD_Lammps ../configure --prefix=/public/fftw/fftw-2.1.5 make make install  # ---------- configure the fftw-2.1.5 module enviroment ---------- #  cd  $module_path/modulefiles mkdir -p fftw # 创建存放不同配置文件的文件夹 cd fftw # 编辑fftw-2.1.5的modulefile文件 cat &gt; fftw-2.1.5 &lt;&lt;! #%Module1.0 module-whatis   \"fftw-2.1.5\"  prepend-path    LD_LIBRARY_PATH         /public/mpi/fftw-2.1.5/lib/ !  #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc &lt;&lt;! module load fftw/fftw-2.1.5 !  echo 'fftw-2.1.5 for lammps install finished' &gt;&gt; /public/system_config/lammps_install.log  # ---------- install jpeg library for lammps ---------- #  # 上传 jpegsrc.v9c.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/jpegsrc.v9c.tar.gz  tar -zxvf jpegsrc.v9c.tar.gz cd jpeg-9c ./configure --prefix=/public/jpeg/jpeg-9c make make install  # ---------- configure the jpeg module enviroment ---------- #  cd $module_path/modulefiles mkdir -p jpeg # 创建存放不同配置文件的文件夹 cd jpeg   # 编辑jpeg-9c的modulefile文件 cat &gt; jpeg-9c &lt;&lt;! #%Module1.0 module-whatis   \"jpeg-9c\"  prepend-path    LD_LIBRARY_PATH         /public/jpeg/jpeg-9c/lib/ !  #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc &lt;&lt;! module load jpeg/jpeg-9c !  echo 'jpeg-9c for lammps install finished' &gt;&gt; /public/system_config/lammps_install.log  # ---------- install yasm &amp; ffmpeg library for lammps ---------- #  cd /software # 上传 yasm-1.3.0.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/yasm-1.3.0.tar.gz  tar -zxvf yasm-1.3.0.tar.gz cd yasm-1.3.0 ./configure --prefix=/public/yasm/yasm-1.3.0 make make install  # ---------- configure the yasm module enviroment ---------- #  cd $module_path/modulefiles mkdir -p yasm # 创建存放不同配置文件的文件夹 cd yasm  # 编辑yasm-1.3.0的modulefile文件 cat &gt; yasm-1.3.0 &lt;&lt;! #%Module1.0 module-whatis   \"yasm-1.3.0\"  prepend-path    PATH                /public/yasm/yasm-1.3.0/bin prepend-path    LD_LIBRARY_PATH         /public/yasm/yasm-1.3.0/lib/ !  #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc  &lt;&lt;! module load yasm/yasm-1.3.0 !  echo 'yasm for lammps install finished' &gt;&gt; /public/system_config/lammps_install.log  # ---------- install yasm &amp; ffmpeg library for lammps ---------- #  module load yasm/yasm-1.3.0  cd /software # 上传 ffmpeg-4.1.tar.bz2 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/ffmpeg-4.1.tar.bz2  tar -jxvf ffmpeg-4.1.tar.bz2 cd ffmpeg-4.1 ./configure --prefix=/public/ffmpeg/ffmpeg-4.1 make make install  # ---------- configure the ffmpeg module enviroment ---------- #  cd $module_path/modulefiles mkdir -p ffmpeg # 创建存放不同配置文件的文件夹 cd ffmpeg  # 编辑ffmpeg-4.1的modulefile文件 cat &gt; ffmpeg-4.1  &lt;&lt;! #%Module1.0 module-whatis   \"ffmpeg-4.1\"  prepend-path    PATH            /public/ffmpeg/ffmpeg-4.1/bin prepend-path    LD_LIBRARY_PATH         /public/ffmpeg/ffmpeg-4.1/lib/ !  #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc &lt;&lt;! module load ffmpeg/ffmpeg-4.1 !  echo 'ffmpeg for lammps install finished' &gt;&gt; /public/system_config/lammps_install.log  # ---------- install lammps ---------- #  # 加载编译环境 module load mpi/openmpi-1.8.5 module load fftw/fftw-2.1.5 module load jpeg/jpeg-9c module load yasm/yasm-1.3.0 module load ffmpeg/ffmpeg-4.1  cd /software # 上传 lammps-stable.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Lammps/lammps-stable.tar.gz  tar -xvf lammps-stable.tar.gz cd lammps-12Dec18 # 当前稳定版本lammps-12Dec18 cd src make yes-all make no-lib  # 编译并行版Lammps,修改Make文件  cd MAKE/OPTIONS cp Makefile.g++_openmpi  Makefile.g++_openmpi.bak  sed -i 's/^.*LMP_INC =.*$/LMP_INC = -DLAMMPS_GZIP -DLAMMPS_JPEG -DLAMMPS_FFMPEG/g' Makefile.g++_openmpi  sed -i 's/^.*MPI_INC =.*$/MPI_INC =      -I\\/public\\/mpi\\/openmpi-1.8.5\\/bin\\/include/g' Makefile.g++_openmpi sed -i 's/^.*MPI_LIB =.*$/MPI_LIB =\t    -L\\/public\\/mpi\\/openmpi-1.8.5\\/bin\\/lib -lmpi/g' Makefile.g++_openmpi  sed -i 's/^.*FFT_INC =.*$/FFT_INC =    \t-I\\/public\\/fftw\\/fftw-2.1.5\\/include/g' Makefile.g++_openmpi sed -i 's/^.*FFT_LIB =.*$/FFT_LIB =\t    -L\\/public\\/fftw\\/fftw-2.1.5\\/lib -lfftw/g' Makefile.g++_openmpi  sed -i 's/^.*JPG_INC =.*$/JPG_INC =\t   -I\\/public\\/jpeg\\/jpeg-9c\\/include/g' Makefile.g++_openmpi sed -i 's/^.*JPG_PATH =.*$/JPG_PATH = \t -L\\/public\\/jpeg\\/jpeg-9c\\/lib/g' Makefile.g++_openmpi sed -i 's/^.*JPG_LIB =.*$/JPG_LIB =\t   -ljpeg/g' Makefile.g++_openmpi  cd /software/lammps-12Dec18/src make g++_openmpi cp lmp_g++_openmpi /public/bin/lammps-20181212-mpi  # 编译Lammps中msi2lmp.exe格式转换工具  cd /software/lammps-12Dec18/tools/msi2lmp/src make cp msi2lmp.exe /public/bin/msi2lmp.exe  echo 'lammps install finished' &gt;&gt; /public/system_config/lammps_install.log    Lammps测试与提交pbs任务脚本     下文中为您提供了Lammps测试与提交pbs任务脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令t添加可执行权限，执行即可完成在鸿之微“一体机”上自动Lammps测试与提交pbs任务脚本   #!/bin/bash  # ---------- define the variables ---------- #  # set the user you want to use for doing the test_example  test_user=\"hzwtech\"  # ---------- do the example test ---------- #  su $test_user &lt;&lt;EOF cd ~ mkdir soft_test cd soft_test mkdir lammps_test cd lammps_test  cp /public/pbs_script_example/lammps.pbs . cp /public/software_test_example/lammps_test_example.tar.gz .  tar -zxvf lammps_test_example.tar.gz  cd lammps_test_example  cp ../lammps.pbs .  qsub lammps.pbs EOF  echo 'lammps test job submit finished, type \"qstat\" to check the job status'   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/lammps-install/",
        "teaser":null},{
        "title": "MOMAP安装教程",
        "excerpt":"MOMAP自动安装脚本     本页中为您提供了MOMAP自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装MOMAP。   #!/bin/bash  # ---------- define the variables ---------- #  # directory of remote file server ftp_server_ip=\" \" ftp_file_path=\"pub\"  # prefix the module install path module_path=\"/public/modules-4.2.2\"  # ---------- install mpich2 for MOMAP ---------- #  # 上传 mpich2-1.5.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/mpich2-1.5.tar.gz tar -zxvf mpich2-1.5.tar.gz cd mpich2-1.5 mkdir BUILD_MOMAP cd BUILD_MOMAP ../configure --prefix=/public/mpi/mpich2-1.5 --enable-f77 --enable-fc --enable-static --enable-shared make make install  # ---------- configure the mpich2-1.5 module enviroment ---------- #  cd $module_path/modulefiles mkdir -p mpi # 创建存放不同配置文件的文件夹 cd mpi  # 编辑mpich2-1.5的modulefile文件 cat &gt; mpich2-1.5 &lt;&lt; ! #%Module1.0 module-whatis \"mpich2-1.5\" conflict mpi  prepend-path PATH /public/mpi/mpich2-1.5/bin prepend-path LD_LIBRARY_PATH /public/mpi/mpich2-1.5/lib/ !  module unload mpi/openmpi-1.8.5 module load mpi/mpich2-1.5  echo 'mpich2-1.5 for momap install finished' &gt;&gt; /public/system_config/momap_install.log  # ---------- install lapack for MOMAP ---------- #  # 上传 lapack-3.7.0.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/lapack-3.7.0.tar.gz tar -zxvf lapack-3.7.0.tar.gz cd lapack-3.7.0 patch -p0 &lt; shared-lapack-3.7.0.patch export LD_LIBRARY_PATH=/software/lapack-3.7.0:$LD_LIBRARY_PATH cd BLAS/SRC make cd ../.. make  echo 'lapack for momap install finished' &gt;&gt; /public/system_config/momap_install.log  # ---------- install fftw-3.3.5 for MOMAP ---------- #  # 上传 fftw-3.3.5.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/fftw-3.3.5.tar.gz tar -zxvf fftw-3.3.5.tar.gz cd fftw-3.3.5 ./configure --prefix=/public/fftw/fftw-3.3.5 --enable-threads --enable-openmp --enable-static --enable-shared --enable-fortran  F77=gfortran make make install  echo 'fftw-3.3.5 for momap install finished' &gt;&gt; /public/system_config/momap_install.log  # ---------- install MOMAP ---------- #  # 上传 momap-1.0.3.dev-mpich2.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Momap/momap-1.0.3.dev-mpich2.tar.gz tar -zxvf momap-1.0.3.dev-mpich2.tar.gz cd momap-1.0.3.dev-mpich2 # 上传license至/software/momap-1.0.3.dev-mpich2路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Momap/license.lic cp environment.example ./bin/.environment  # 修改以下四行MOMAP相关安装路径信息 sed -i 's/MOMAP_ROOT=\\/home\\/hzw\\/MOMAP\\/momap-1.0.3.dev-mpich2/MOMAP_ROOT=\\/software\\/momap-1.0.3.dev-mpich2/g' ./bin/.environment sed -i 's/MOMAP_LAPACK_LIB=\\/home\\/hzw\\/MOMAP\\/lapack-3.7.0/MOMAP_LAPACK_LIB=\\/software\\/lapack-3.7.0/g' ./bin/.environment sed -i 's/MOMAP_FFTW_LIB=\\/home\\/hzw\\/MOMAP\\/fftw-3.3.5\\/lib/MOMAP_FFTW_LIB=\\/public\\/fftw\\/fftw-3.3.5\\/lib/g' ./bin/.environment sed -i 's/MOMAP_MPI_ROOT=\\/home\\/hzw\\/MOMAP\\/mpich2-1.5/MOMAP_MPI_ROOT=\\/public\\/mpi\\/mpich2-1.5/g' ./bin/.environment  echo 'export PATH=/software/momap-1.0.3.dev-mpich2/bin:$PATH' &gt;&gt; /etc/profile.d/hzw_software.sh  echo 'momap install finished' &gt;&gt; /public/system_config/momap_install.log    MOMAP测试与提交pbs任务脚本     下文中为您提供了RESCU测试与提交pbs任务脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令t添加可执行权限，执行即可完成在鸿之微“一体机”上自动MOMAP测试与提交任务脚本   #!/bin/bash  # ---------- define the variables ---------- #  # set the user you want to use for doing the test_example  test_user=\"hzwtech\"  # ---------- do the example test ---------- #  su $test_user &lt;&lt;EOF cd ~ mkdir soft_test cd soft_test mkdir momap_test cd momap_test  cp /public/pbs_script_example/momap.pbs . cp /public/software_test_example/momap_test_example.tar.gz .  tar -zxvf momap_test_example.tar.gz  cd momap_test_example/photophysics  cp ../../momap.pbs .  qsub momap.pbs EOF  echo 'momap test job submit finished, type \"qstat\" to check the job status'   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/momap-install/",
        "teaser":null},{
        "title": "Nanodcal安装教程",
        "excerpt":"Nanodcal自动安装脚本    本页中为您提供了Nanodcal自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装Nanodcal。   #!/bin/bash  # ---------- define the variables ---------- #  # directory of remote file server ftp_server_ip=\" \" ftp_file_path=\"pub\"  # prefix the module install path module_path=\"/public/modules-4.2.2\"  # ---------- install gcc-4.7.4 for Nanodcal ---------- #  # 上传 gcc-4.7.4.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/gcc-4.7.4.tar.gz  tar -zxvf gcc-4.7.4.tar.gz cd gcc-4.7.4 mkdir BUILD_Nanodcal cd BUILD_Nanodcal ../configure --prefix=/public/gcc/gcc-4.7.4-Nanodcal --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib make -j8 make install -j8  # ---------- configure the gcc-4.7.4-Nanodcal module enviroment ---------- #  cd $module_path/modulefiles mkdir -p gcc # 创建存放不同配置文件的文件夹 cd gcc  # 编辑gcc-4.7.4-Nanodcal的modulefile文件 cat &gt; 4.7.4-Nanodcal &lt;&lt; ! #%Module1.0 module-whatis \"gcc-4.7.4-Nanodcal\" conflict gcc  prepend-path PATH /public/gcc/gcc-4.7.4-Nanodcal/bin prepend-path LD_LIBRARY_PATH /public/gcc/gcc-4.7.4-Nanodcal/lib/ !  module unload gcc/4.4.7 module load gcc/4.7.4-Nanodcal  echo 'gcc-4.7.4 for nanodcal install finished' &gt;&gt; /public/system_config/nanodcal_install.log  # ---------- install openmpi-1.8.5 for Nanodcal ---------- #  # 上传 openmpi-1.8.5.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/openmpi-1.8.5.tar.gz  tar -zxvf openmpi-1.8.5.tar.gz cd openmpi-1.8.5 make distclean mkdir BUILD_Nanodcal cd BUILD_Nanodcal ../configure --prefix=/public/mpi/openmpi-1.8.5-Nanodcal --disable-dlopen --enable-static --disable-shared CC=gcc CXX=g++ F77=gfortran FC=gfortran  CFLAGS=-fPIC  CXXFLAGS=-fPIC  FFLAGS=-fPIC  FCFLAGS=-fPIC make make install  # ---------- configure the openmpi-1.8.5-Nanodcal module enviroment ---------- #  cd $module_path/modulefiles mkdir -p mpi # 创建存放不同配置文件的文件夹 cd mpi  # 编辑openmpi-1.8.5-Nanodcal的modulefile文件 cat &gt; openmpi-1.8.5-Nanodcal &lt;&lt; ! #%Module1.0 module-whatis \"openmpi-1.8.5-Nanodcal\" conflict mpi  prepend-path PATH /public/mpi/openmpi-1.8.5-Nanodcal/bin prepend-path LD_LIBRARY_PATH /public/mpi/openmpi-1.8.5-Nanodcal/lib/ !  echo 'openmpi-1.8.5 for nanodcal install finished' &gt;&gt; /public/system_config/nanodcal_install.log  # ---------- install Matlab.R2015B.64 for Nanodcal ---------- #  # 上传 Matlab.R2015B.64.tar.gz源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/Matlab.R2015B.64.tar.gz  tar -zxvf Matlab.R2015B.64.tar.gz # 解压免安装包即可  # ---------- configure the Matlab.R2015B.64 module enviroment ---------- #  cd $module_path/modulefiles mkdir -p Matlab # 创建存放不同配置文件的文件夹 cd Matlab  # 编辑Matlab.R2015B的modulefile文件 cat &gt; R2015B &lt;&lt; ! #%Module1.0 module-whatis \"Matlab-R2015B\"  prepend-path PATH /software/MatlabR2015B/bin !  echo 'Matlab.R2015B.64 for nanodcal install finished' &gt;&gt; /public/system_config/nanodcal_install.log  # ---------- install Nanodcal ---------- #  # 加载编译环境 module unload gcc/4.4.7 module load gcc/4.7.4-Nanodcal module unload mpi/openmpi-1.8.5 module load mpi/openmpi-1.8.5-Nanodcal module load Matlab/R2015B  # 上传 nanodcal20181201.zip源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Nanodcal/nanodcal20181201.zip  unzip nanodcal20181201.zip cd Nanodcal  matlab -nodisplay -r \"mex -setup; nanodcal -install I_Accept_The_End_User_License_Agreement; exit\"  cd /software/Nanodcal mkdir license cd license # 上传license.dat文件至license目录 /sbin/ifconfig &gt; out.log #grep 'inet addr' out.log |awk -F \":\" '{print $2}'|awk '{print $1}' &gt; ip.dat # for centos6 grep 'inet ' out.log |awk '{print $2}' &gt; ip.dat # for centos7 rm -f out.log  echo 'nanodcal install finished' &gt;&gt; /public/system_config/nanodcal_install.log    Nanodcal测试与提交pbs任务脚本     下文中为您提供了Nanodcal测试与提交pbs任务脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令t添加可执行权限，执行即可完成在鸿之微“一体机”上自动Nanodcal测试与提交pbs任务脚本   #!/bin/bash  # ---------- define the variables ---------- #  # set the user you want to use for doing the test_example  test_user=\"hzwtech\"  # ---------- do the example test ---------- #  su $test_user &lt;&lt;EOF cd ~ mkdir soft_test cd soft_test mkdir nanodcal_test cd nanodcal_test  cp /public/pbs_script_example/nanodcal.pbs . cp /public/software_test_example/nanodcal_test_example.tar.gz .  tar -zxvf nanodcal_test_example.tar.gz  cd nanodcal_test_example  cp ../nanodcal.pbs .  qsub nanodcal.pbs EOF  echo 'nanodcal test job submit finished, type \"qstat\" to check the job status'  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/nanodcal-install/",
        "teaser":null},{
        "title": "任务管理Torque PBS安装",
        "excerpt":"Torque PBS自动安装脚本     本页中为您提供了任务管理Torque PBS自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装Torque PBS。   # ---------- install torque pbs ---------- #  # 安装依赖 yum -y install openssl openssl-devel yum -y install libxml2 libxml2-devel yum -y install boost boost-devel  # 上传 torque-6.1.3.tar.gz 源码至/software路径下 cd /software sshpass -p $scp_server_pw scp $scp_server_user@$scp_server_ip:$scp_file_path/Software/System/torque-6.1.3.tar.gz . tar -zxvf torque-6.1.3.tar.gz cd torque-6.1.3 ./configure # 安装在默认路径/usr/local/sbin,/usr/local/bin make make install # 卸载命令 make uninstall  # 添加系统服务并设为开机启动  systemctl enable trqauthd.service systemctl enable pbs_server.service systemctl enable pbs_mom.service  cp contrib/init.d/pbs_sched /etc/init.d/  chkconfig --add pbs_sched chkconfig pbs_sched on  echo y | ./torque.setup root # qterm为终止pbs_server的运行,若不终止，无法初始化  # 查看逻辑CPU的个数  np=`cat /proc/cpuinfo| grep \"processor\"| wc -l`  cat &gt; /var/spool/torque/server_priv/nodes &lt;&lt; ! `hostname`   np=$np !  systemctl restart trqauthd.service # 如果服务启动失败，编辑 /etc/hosts 加入本机ip和主机名  for i in pbs_server pbs_sched pbs_mom ; do systemctl restart $i ; done  ps -e | grep pbs ps -e | grep trqauthd  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/pbs-install/",
        "teaser":null},{
        "title": "RESCU安装教程",
        "excerpt":"RESCU自动安装脚本     本页中为您提供了RESCU自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装RESCU。   #!/bin/bash  # ---------- define the variables ---------- #  # directory of remote file server ftp_server_ip=\" \" ftp_file_path=\"pub\"  # prefix the module install path module_path=\"/public/modules-4.2.2\"  # ---------- install gcc-4.7.4 for RESCU ---------- #  cd /software # 上传 gcc-4.7.4.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/gcc-4.7.4.tar.gz  tar -zxvf gcc-4.7.4.tar.gz cd gcc-4.7.4 mkdir BUILD_RESCU cd BUILD_RESCU ../configure --prefix=/public/gcc/gcc-4.7.4-RESCU --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib make -j8 make install -j8  # ---------- configure the gcc-4.7.4-RESCU module enviroment ---------- #  cd $module_path/modulefiles/gcc cat &gt; 4.7.4-RESCU &lt;&lt; ! #%Module1.0 module-whatis \"GCC 4.7.4-RESCU\" conflict gcc  set gcc_path /public/gcc/gcc-4.7.4-RESCU prepend-path PATH \\$gcc_path/bin prepend-path MANPATH\t\\$gcc_path/share/man prepend-path LD_LIBRARY_PATH \\$gcc_path/lib64/:\\$gcc_path/lib !  module unload gcc/4.4.7 module load gcc/4.7.4-RESCU  echo 'gcc-4.7.4 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install openmpi-1.8.5 for RESCU ---------- #  # 上传 openmpi-1.8.5.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/openmpi-1.8.5.tar.gz  tar -zxvf openmpi-1.8.5.tar.gz cd openmpi-1.8.5 make distclean mkdir BUILD_RESCU cd BUILD_RESCU ../configure --prefix=/public/mpi/openmpi-1.8.5-RESCU --disable-dlopen --enable-static --disable-shared CC=gcc CXX=g++ F77=gfortran FC=gfortran  CFLAGS=-fPIC  CXXFLAGS=-fPIC  FFLAGS=-fPIC  FCFLAGS=-fPIC make make install  # ---------- configure the openmpi-1.8.5-RESCU module enviroment ---------- #  cd $module_path/modulefiles mkdir -p mpi # 创建存放不同配置文件的文件夹 cd mpi  # 编辑openmpi-1.8.5-RESCU的modulefile文件 cat &gt; openmpi-1.8.5-RESCU &lt;&lt; ! #%Module1.0 module-whatis \"openmpi-1.8.5-RESCU\" conflict mpi  prepend-path PATH /public/mpi/openmpi-1.8.5-RESCU/bin prepend-path LD_LIBRARY_PATH /public/mpi/openmpi-1.8.5-RESCU/lib/ !  echo 'openmpi-1.8.5 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install lapack-3.5.0 for RESCU ---------- #  # 上传 lapack-3.5.0.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/lapack-3.5.0.tar.gz  tar -zxvf lapack-3.5.0.tar.gz cd lapack-3.5.0 make blaslib make lapacklib  echo 'lapack-3.5.0 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install OpenBLAS-0.2.20 for RESCU ---------- #  # 上传 OpenBLAS-0.2.20.tar.gz 源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/OpenBLAS-0.2.20.tar.gz  tar -zxvf OpenBLAS-0.2.20.tar.gz cd OpenBLAS-0.2.20 make CC=gcc FC=gfortran NO_AVX2=1  echo 'OpenBLAS-0.2.20 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install scalapack-2.0.2 for RESCU ---------- #  # 上传 scalapack-2.0.2.tar.gz源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/scalapack-2.0.2.tar.gz  tar -zxvf scalapack-2.0.2.tar.gz cd scalapack-2.0.2 make lib  echo 'scalapack-2.0.2 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install libxc-3.0.0 for RESCU ---------- #  # 上传 libxc-3.0.0.tar.gz源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/libxc-3.0.0.tar.gz  tar -zxvf libxc-3.0.0.tar.gz cd libxc-3.0.0 mkdir BUILD cd BUILD ../configure --prefix=/public/libxc/libxc-3.0.0 CFLAGS=\"-O2 -fPIC\" make make install  echo 'libxc-3.0.0 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install Matlab.R2015B.64 for RESCU ---------- #  # 上传 Matlab.R2015B.64.tar.gz源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/Matlab.R2015B.64.tar.gz  tar -zxvf Matlab.R2015B.64.tar.gz # 解压免安装包即可  # ---------- configure the Matlab.R2015B.64 module enviroment ---------- #  cd $module_path/modulefiles mkdir -p Matlab # 创建存放不同配置文件的文件夹 cd Matlab  # 编辑Matlab.R2015B的modulefile文件 cat &gt; R2015B &lt;&lt; ! #%Module1.0 module-whatis \"Matlab-R2015B\"  prepend-path PATH /software/MatlabR2015B/bin !  echo 'Matlab.R2015B.64 for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install RESCU ---------- #  # 加载编译环境 module unload gcc/4.4.7 module load gcc/4.7.4-RESCU module unload mpi/openmpi-1.8.5 module load mpi/openmpi-1.8.5-RESCU module load Matlab/R2015B  # 上传 rescu.tar.gz源码至/software路径下 cd /software wget ftp://$ftp_server_ip/$ftp_file_path/Software/RESCU/rescu-2.1.0.tar.gz  tar -zxvf rescu-2.1.0.tar.gz cd rescu-2.1.0  echo \"export OPENBLAS_NUM_THREADS=1\"&gt;barc source ./barc  echo \"lapack='/software/lapack-3.5.0/liblapack.a';\"&gt;lapackpath echo \"blas='/software/OpenBLAS-0.2.20/libopenblas.a -lz -lgfortran';\"&gt;blaspath echo \"scalapack='/software/scalapack-2.0.2/libscalapack.a';\"&gt;scalapackpath echo \"xc='/public/libxc/libxc-3.0.0';\"&gt;libxcpath  cat lapackpath blaspath scalapackpath libxcpath &gt;smilibxc.m rm -f lapackpath blaspath scalapackpath libxcpath  cd src matlab -nodisplay -r \"makeRESCU -agreeToLicense y -mpi -smi -libxc ../smilibxc.m;exit\"  cd ../license /sbin/ifconfig &gt; out.log #grep 'inet addr' out.log |awk -F \":\" '{print $2}'|awk '{print $1}' &gt; ip.dat # for centos6 grep 'inet ' out.log |awk '{print $2}' &gt; ip.dat # for centos7 rm -f out.log  echo 'rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  # ---------- install MCR ---------- #  cd /software/MatlabR2015B/toolbox/compiler/deploy/glnxa64 # 找到MCR 安装包 unzip MCRInstaller.zip ./install -mode silent -agreeToLicense yes -destinationFolder /public/MCR/  # ---------- configure the MCR module enviroment ---------- #  cd $module_path/modulefiles mkdir -p MCR # 创建存放不同配置文件的文件夹 cd MCR  # 编辑Matlab.R2015B的modulefile文件 cat &gt; v90 &lt;&lt; ! #%Module1.0 module-whatis \"MCR-v90\"  prepend-path LD_LIBRARY_PATH /public/MCR/v90/runtime/glnxa64 prepend-path LD_LIBRARY_PATH /public/MCR/v90/bin/glnxa64 prepend-path LD_LIBRARY_PATH /public/MCR/v90/sys/os/glnxa64 prepend-path LD_LIBRARY_PATH /public/MCR/v90/sys/opengl/lib/glnxa64 !  #修改module启动文件 cat &gt;&gt; $module_path/init/modulerc &lt;&lt; ! module load MCR/v90 !  echo 'MCR for rescu install finished' &gt;&gt; /public/system_config/rescu_install.log  module load MCR/v90  chown -R root:root /software/ chown -R root:root /public/ chmod -R +rx /software/rescu-2.1.0  cd /software/rescu-2.1.0 mcc -m rescu -a /software/rescu-2.1.0/src -a /software/rescu-2.1.0/license -R '-nodisplay,-singleCompThread'  echo 'mcc verison rescu install finished' &gt;&gt; /public/system_config/rescu_install.log   RESCU测试与提交pbs任务脚本     下文中为您提供了RESCU测试与提交pbs任务脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令t添加可执行权限，执行即可完成在鸿之微“一体机”上自动RESCU测试与提交pbs任务脚本   #!/bin/bash  # ---------- define the variables ---------- #  # set the user you want to use for doing the test_example  test_user=\"hzwtech\"  # ---------- do the example test ---------- #  su $test_user &lt;&lt;EOF cd ~ mkdir soft_test cd soft_test mkdir rescu_test cd rescu_test  cp /public/pbs_script_example/rescu.pbs . cp /public/software_test_example/rescu_test_example.tar.gz .  tar -zxvf rescu_test_example.tar.gz  cd rescu_test_example  cp ../rescu.pbs .  qsub rescu.pbs EOF  echo 'rescu test job submit finished, type \"qstat\" to check the job status'  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/rescu-install/",
        "teaser":null},{
        "title": "第一性原理-VASP安装教程",
        "excerpt":"VASP自动安装脚本     本页中为您提供了VASP自动安装脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令添加可执行权限，执行即可完成在鸿之微“一体机”上自动安装VASP。   #!/bin/bash  # ---------- define the variables ---------- #  # directory of remote file server ftp_server_ip=\" \" ftp_file_path=\"pub\"  # prefix the module install path module_path=\"/public/modules-4.2.2\"  # ---------- install intel icc compiler ---------- #  cd /software # 上传 intel_icc_2019 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/intel_icc/parallel_studio_xe_2019_update3_cluster_edition.tgz  tar zxvf parallel_studio_xe_2019_update3_cluster_edition.tgz cd parallel_studio_xe_2019_update3_cluster_edition  wget ftp://$ftp_server_ip/$ftp_file_path/Software/intel_icc/silent.2019.cfg  ./install.sh --silent=silent.2019.cfg  source /public/intel/bin/compilervars.sh  intel64  echo 'intel icc for vasp install finished' &gt;&gt; /public/system_config/vasp_install.log  # ---------- install openmpi-2.0.4 with intel icc compiler ---------- #  cd /software # 上传 openmpi-2.0.4.tar.gz 源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/Library/openmpi-2.0.4.tar.gz  tar -zxvf openmpi-2.0.4.tar.gz cd openmpi-2.0.4 mkdir BUILD_openmpi_icc cd BUILD_openmpi_icc ../configure --prefix=/public/mpi/openmpi-2.0.4-icc CC=icc  CXX=icpc  FC=ifort  F77=ifort make -j 4 make install  # ---------- configure the openmpi-2.0.4-icc module enviroment ---------- #  cd $module_path/modulefiles mkdir -p mpi # 创建存放不同配置文件的文件夹 cd mpi  # 编辑openmpi-2.0.4-icc的modulefile文件 cat &gt; openmpi-2.0.4-icc &lt;&lt; ! #%Module1.0  module-whatis   \"openmpi-2.0.4-icc\" conflict  mpi  prepend-path    PATH               /public/mpi/openmpi-2.0.4-icc/bin prepend-path    LD_LIBRARY_PATH    /public/mpi/openmpi-2.0.4-icc/lib/ !  echo 'openmpi-2.0.4-icc for vasp install finished' &gt;&gt; /public/system_config/vasp_install.log  # ---------- install vasp5.4.1 ---------- #  module unload mpi/openmpi-1.8.5 module load mpi/openmpi-2.0.4-icc  cd /software # 上传 vasp5.4.1.tar源码至/software路径下 wget ftp://$ftp_server_ip/$ftp_file_path/Software/VASP/vasp.5.4.1.tar  tar -xvf vasp.5.4.1.tar cd vasp.5.4.1/arch  cp makefile.include.linux_intel ../makefile.include # 编译fftw 位于$(MKLROOT)/interfaces/fftw3xf/libfftw3xf_intel.a cd $MKLROOT/interfaces/fftw3xf make libintel64 # 生成：libfftw3xf_intel.a  cd /software/vasp.5.4.1 make all # 编译vasp；或者 make std  cp /software/vasp.5.4.1/bin/vasp_std /public/bin/vasp  echo 'vasp install finished' &gt;&gt; /public/system_config/vasp_install.log    VASP测试与提交pbs任务脚本     下文中为您提供了VASP测试与提交pbs任务脚本，您可以直接将下文中脚本内容复制后使用，然后使用chmod +x命令t添加可执行权限，执行即可完成在鸿之微“一体机”上自动VASP测试与提交pbs任务脚本   #!/bin/bash  # ---------- define the variables ---------- #  # set the user you want to use for doing the test_example  test_user=\"hzwtech\"  # ---------- do the example test ---------- #  su $test_user &lt;&lt;EOF cd ~ mkdir soft_test cd soft_test mkdir vasp_test cd vasp_test  cp /public/pbs_script_example/vasp.pbs . cp /public/software_test_example/vasp_test_example.tar.gz .  tar -zxvf vasp_test_example.tar.gz  cd vasp_test_example  cp ../vasp.pbs .  qsub vasp.pbs EOF  echo 'vasp test job submit finished, type \"qstat\" to check the job status'  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwconfig/vasp-install/",
        "teaser":null},{
        "title": "鸿之微-二维材料设计一体机",
        "excerpt":"可选硬件方案    鸿之微-二维材料设计一体机根据根据软件的计算特性，建议您选择：     最强算力：双路CPU + 四路GPU配置方案   进阶算力：双路CPU + 双路GPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/2d-material-hardware/",
        "teaser":null},{
        "title": "鸿之微-二维材料设计一体机",
        "excerpt":"  鸿之微-二维材料设计一体机搭载了RESCU和Nanodcal两款常用二维材料设计软件，为您在二维材料设计中提供强力助推。   RESCU介绍     RESCU是一款仅仅用小型计算机就能研究超大体系的KS-DFT计算软件。 RESCU是Real space Electronic Structure CalcUlator（实空间电子结构计算程序）的缩写，它的核心是一种全新、极其强大、并行效率超高的KS-DFT自洽计算方法。     RESCU可以使用一体机种有限的计算机资源，并且还可以使用GPU进行加速计算，来计算包含一千、数千、上万体系的电子结构性质。RESCU是解决超大体系KS-DFT问题的里程碑式的新方法，正在被应用于金属、半导体、绝缘体、液体、DNA、1维、2维、3维、表面、分子、磁性、非磁性、杂质、固体等等不同系统的KS-DFT计算。                                                  RESCU主要功能       Nanodcal介绍     Nanodcal是基于NEGF-DFT的材料计算和电子器件量子输运模拟的通用大型计算软件程序包，主要用于模拟器件材料中的非线性、非平衡的量子输运过程，是目前最先进的基于第一性原理的输运软件。Nanodcal可以用于材料物性、分子电子学、自旋电子学、光电流、半导体电子学器件设计等方面的研究工作。                                                  Nanodcal主要功能           选择硬件  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/2d-material-software/",
        "teaser":null},{
        "title": "鸿之微-机器学习材料设计一体机",
        "excerpt":"可选硬件方案    鸿之微-机器学习材料设计一体机根据根据软件的计算特性，建议您选择：     最强算力：双路CPU + 四路GPU配置方案   进阶算力：双路CPU + 双路GPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/ai-material-hardware/",
        "teaser":null},{
        "title": "鸿之微-机器学习材料设计一体机",
        "excerpt":"  鸿之微-机器学习材料设计一体机搭载了鸿之微FIRST材料信息学虚拟筛选软件，采用人工智能的方式对海量材料进行快速筛选。   主要功能     新材料的设计和发现，通常需要研究人员在候选材料中筛选排除性能不达标的材料，手段包括实验，计算仿真等等。受到实验或仿真的时间或成本的制约，研究人员只能在很有限的范围内筛选合适的材料。     FIRST(Fast vIRtual Screening Tool 快速筛选工具)一体机针对材料筛选的应用场景，提供了完善先进的解决方案，实现低成本高效率超大范围筛选材料，助力新材料的快速精准研发。适用范围包括有机光电材料，热电材料，二维材料，锂电池电极/电解质材料等等。       选择硬件   FIRST筛选流程     FIRST融合了材料信息学、统计学、机器学习的多种方法，能够快速有效地筛选出目标材料。流程是：输入样本材料—&gt;特征化—&gt;机器学习—&gt;虚拟筛选，见图1。特征化是把材料的组成和结构转换为描述符，例如分子摩尔质量，晶体平均电负性等等。目前FIRST支持的分子描述符和晶体描述符均已超过200，包括2D, 3D, Fragment, Element四种类型，参见图3。描述符可以用于数据库检索，也可以作为机器学习算法的输入，从而得到材料的类别、关键性能等与描述符的对应关系模型。随后机器学习模型在FIRST的数据库中进行材料的筛选。                                                  图1. FIRST流程       FIRST学习方法     FIRST集成了多种决策树，逻辑回归，随机森林，支持向量机等经典机器学习方法，并根据材料学实际情况作了大量改进，能完成材料分类、回归拟合、聚类等等任务。当用户对材料的某种性质感兴趣时，可以通过输入样本材料结构及该性质的数据，利用FIRST的机器学习模块进行训练得到模型，见图2。根据模型到FIRST的无机晶体材料数据库或有机小分子材料数据库中进行筛选。                                                  图2. FIRST的机器学习       FIRST数据库     FIRST内置了强大的无机晶体数据库和有机小分子数据库，材料数量分别高达32万，100多万，目前仍在快速增长中。FIRST支持多种检索方式，包括材料性质(描述符)检索，相似度检索，元素数量检索，机器学习模型检索等等。为了减轻用户学习成本，FIRST内置的智能推荐系统能根据用户的样本材料分析最优的描述符和取值范围，推荐筛选条件。就目前看来，这种独有的智能检索方式尚未在同类材料数据库中出现。                                                                                      图3. 1) FIRST的描述符和数据库；2) FIRST的描述符推荐算法基于多次采样评价        ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/ai-material-software/",
        "teaser":null},{
        "title": "鸿之微-电池材料设计一体机",
        "excerpt":"可选硬件方案    鸿之微-电池材料设计一体机根据软件的计算特性，建议您选择：     最强算力：双路CPU + 四路GPU配置方案   进阶算力：双路CPU + 双路GPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/battery-material-hardware/",
        "teaser":null},{
        "title": "鸿之微-电池材料设计一体机",
        "excerpt":"  鸿之微-电池材料设计一体机搭载了Materials Studio和VASP两款常用材料设计软件，为您在材料设计中提供强力助推。   注：鸿之微-电池材料设计一体机为您提供Materials Studio使用版权，VASP使用版权需您自己获取。   此产品正在开发中，敬请期待…       选择硬件    ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/battery-material-software/",
        "teaser":null},{
        "title": "进阶算力 2+2 方案",
        "excerpt":"  鸿之微“一体机” - 进阶算力2+2方案 硬件选用 双路 Intel® Xeon® Scalable Processors系列处理器，具有多核、性能优越、能耗低、低发热等优点。同时选用双路最新Turing（图灵）架构NVIDIA® 旗舰GPU，可显著加快科学、分析、工程、消费和企业应用程序的运行速度。     进阶算力2+2方案适用于需要GPU加速计算场景，目前提供高低两种配置选择：   3.双路至强金牌CPU + 双路 RTX 2080 Ti GPU方案     此方案选用两颗Intel® Xeon® 至强金牌 6140 CPU，提供高达36核72线程算力。GPU选用两片NVIDIA® RTX 2080 Ti 图形计算卡。      进阶算力2+2-双路至强金牌CPU + 双路GPU方案（风冷版）- 配置详情                  配置       型号       参数       数量                       处理器       至强 金牌 6140 (2片)       2.3G 18核36线程       2                 主板       C621服务器主板       EEB版型       1                 显卡       GeForce RTX 2080 Ti       11G       2                 内存       256G (32G*8, 最大支持1.5T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 电源       钛金级电源       1600W       1                 机箱       定制专业机箱       静音机箱       1                 网卡       集成2个千兆网口       1Gbps       2                 产品型号       自组装               hzw72jjsl             4.双路至强银牌CPU + 双路 RTX 2080 Ti GPU方案     此方案选用两颗Intel® Xeon® 至强银牌 4116 CPU，提供高达24核48线程算力。GPU选用两片NVIDIA® RTX 2080 Ti 图形计算卡。        进阶算力2+2-双路至强银牌CPU + 双路GPU方案（风冷版）- 配置详情                  配置       型号       参数       数量                       处理器       至强 银牌 4116 (2片)       2.1G 12核24线程       2                 主板       C621服务器主板       EEB版型       1                 显卡       GeForce RTX 2080 Ti       11G       2                 内存       256G (32G*8, 最大支持1.5T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 机箱       定制专业机箱       静音机箱       1                 电源       钛金级电源       1600W       1                 网卡       集成2个千兆网口       1Gbps       2                 产品型号       自组装               hzw52jjsl             注：此页中配置信息可能会根据硬件更新，不定期发生微调，最终配置以销售合同为准。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/hardware-2cpu-2gpu/",
        "teaser":null},{
        "title": "最强算力 2+4 方案",
        "excerpt":"  鸿之微“一体机” - 最强算力2+4方案 硬件选用 双路 Intel® Xeon® Scalable Processors系列处理器，具有多核、性能优越、能耗低、低发热等优点。同时选用四路最新Turing（图灵）架构NVIDIA® 旗舰GPU，可显著加快科学、分析、工程、消费和企业应用程序的运行速度。     最强算力2+4方案适用于重度需要GPU加速计算场景，目前提供高低两种配置选择：   1.双路至强金牌CPU + 四路 RTX 2080 Ti GPU方案     此方案选用两颗Intel® Xeon® 至强金牌 6140 CPU，提供高达36核72线程算力。GPU选用四片NVIDIA® RTX 2080 Ti 图形计算卡。      最强算力2+4-双路至强金牌CPU+四路GPU方案（风冷版）- 配置详情                  配置       型号       参数       数量                       处理器       至强 金牌 6140 (2片)       2.3G 18核36线程       2                 主板       C621服务器主板       EEB版型       1                 显卡       GeForce RTX 2080Ti       11G       4                 内存       256G (32G*8, 最大支持1.5T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 电源       钛金级电源       1600W       1                 机箱       定制专业机箱       静音机箱       1                 网卡       集成2个千兆网口       1Gbps       2                 产品型号       自组装               hzw90jjsl             2..双路至强银牌CPU + 四路 RTX 2080 Ti GPU方案     此方案选用两颗Intel® Xeon® 至强银牌 4116 CPU，提供高达24核48线程算力。GPU选用四片NVIDIA® RTX 2080 Ti 图形计算卡。        最强算力2+4-双路至强银牌CPU+四路GPU方案（风冷版）- 配置详情                  配置       型号       参数       数量                       处理器       至强 银牌 4116 (2片)       2.1G 12核24线程       2                 主板       C621服务器主板       EEB版型       1                 显卡       GeForce RTX 2080 Ti       11G       4                 内存       256G (32G*8, 最大支持1.5T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 电源       钛金级电源       1600W       1                 机箱       定制专业机箱       静音机箱       1                 网卡       集成2个千兆网口       1Gbps       2                 产品型号       自组装               hzw70jjsl             注：鸿之微定制一体机默认使用常规风冷散热方案，如您对静音散热具有更高要求，可为您定制提供水冷散热方案，为您提供更静音使用体验。   注：此页中配置信息可能会根据硬件更新，不定期发生微调，最终配置以销售合同为准。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/hardware-2cpu-4gpu/",
        "teaser":null},{
        "title": "均衡算力 2+0 方案",
        "excerpt":"  鸿之微“一体机” - 均衡算力2+0方案 硬件选用 双路 Intel® Xeon® Scalable Processors系列处理器，具有多核、性能优越、能耗低、低发热等优点。     均衡算力2+0方案目前提供高低两种配置选择：   5.双路至强金牌CPU方案     此方案选用两颗Intel® Xeon® 至强金牌 6140 CPU，提供高达36核72线程算力。      均衡算力2+0-双路至强金牌CPU方案 - 配置详情                  配置       型号       参数       数量                       处理器       至强 金牌 6140 (2片)       2.3G 18核36线程       2                 主板       C621服务器主板带集显       CEB版型       1                 内存       256G (32G*8, 最大支持1T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 电源       钛金级电源       1000W       1                 机箱       定制专业机箱       静音机箱       1                 产品型号       自组装               hzw55jhsl             6.双路至强银牌CPU方案     此方案选用两颗Intel® Xeon® 至强银牌 4116 CPU，提供高达24核48线程算力。        均衡算力2+0-双路至强银牌CPU方案 - 配置详情                  配置       型号       参数       数量                       处理器       至强 银牌 4116 (2片)       2.1G 12核24线程       2                 主板       C621服务器主板带集显       CEB版型       1                 内存       256G (32G*8, 最大支持1T)       2666 MHz Reg.ecc       8                 SSD       西数黑盘 SN750 500G       M.2/NVME       1                 HDD       ST 4T（2T*2） 企业级机械盘       SATA       2                 电源       钛金级电源       1000W       1                 机箱       定制专业机箱       静音机箱       1                 产品型号       自组装               hzw35jhsl             注：此页中配置信息可能会根据硬件更新，不定期发生微调，最终配置以销售合同为准。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/hardware-2cpu/",
        "teaser":null},{
        "title": "鸿之微文件服务一体机",
        "excerpt":"  鸿之微“一体机”采用最新的Skylake架构V3 Intel® Xeon® GOLD处理器，具有多核、性能优越、能耗低、低发热等优点；同时选用最新Turing（图灵）架构NVIDIA® 旗舰GPU，可显著加快科学、分析、工程、消费和企业应用程序的运行速度。   24T文件存储服务器           24T文件存储服务器-配置信息         24T存储服务一体机方案                  配置       型号       参数       数量                       处理器       酷睿 i3 8350K       酷睿四核       1                 主板       华擎 Z370M-ITX/ac主板       MINI-ITX       1                 内存       金士顿 16G (8G*2)       DDR4 2666       2                 SSD       西数黑盘 250G       M.2/NVME       1                 HDD       西数红盘 4T*6 (可扩容至60T)       SATA       6                 电源       银欣 500W SX500-G       SFX       1                 机箱       银欣 Nas机箱 DS380       MINI-ITX迷你型       1                 序列号       自组装               1a1b5c0d0                   24T文件存储服务器-示意图         主机整体示意图  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/hardware-fileserver-1/",
        "teaser":null},{
        "title": "鸿之微“一体机”-硬件方案",
        "excerpt":"  鸿之微“一体机”搭载一流的计算软件，并选用一流的硬件产品，为您倾力提供一流的计算软件和计算性能。鸿之微“一体机”根据各搭载计算软件的不同计算特性，针对性设计了不同的硬件配置方案，以利于各软件发挥出最佳的计算性能。客户可以根据实际需求进行选择最适合自己的方案。     鸿之微“一体机”目前推出两类产品方案：鸿之微定制一体机 和 用户定制一体机。   鸿之微定制一体机    鸿之微定制一体机为鸿之微针对不同  科学研究方向，针对性设计的软硬件合理搭配的一体机产品。目前有如下六款产品：           二维材料设计一体机     了解详情   选购硬件方案            电池材料设计一体机     了解详情   选购硬件方案            有机发光材料设计一体机   了解详情   选购硬件方案            机器学习材料设计一体机   了解详情   选购硬件方案            量子输运计算一体机     了解详情   选购硬件方案            大体系KS-DFT计算一体机   了解详情   选购硬件方案       用户定制一体机    鸿之微“一体机”除上述已有定制一体机产品外，还可以为您提供定制产品。您可以根据您的具体需要自选，可以自由组合，模块化定制。    鸿之微软件产品   +    一体机硬件方案     一台用户定制一体机通常由一款或多款鸿之微软件产品 + 一套一体机硬件方案组成。下面为您列出了可选鸿之微软件产品和可选一体机硬件方案。   可选鸿之微软件产品     鸿之微为您提供多功能、高性能的材料和器件计算软件产品，可选产品如下：      RESCU 大体系KS-DFT计算软件   Nanodcal 量子输运计算软件   MOMAP 新型OLED材料设计软件   FIRST 机器学习材料筛选软件   可选一体机硬件方案     鸿之微“一体机”硬件方案主要根据CPU和GPU需求情况定为三种搭配，六种方案：      最强算力2+4方案：1.双路金牌CPU + 四路GPU  2.双路银牌CPU + 四路GPU   进阶算力2+2方案：3.双路金牌CPU + 双路GPU  4.双路银牌CPU + 双路GPU   均衡算力2+0方案：5.双路金牌CPU       6.双路银牌CPU          当您根据自己的实际需求选择好软件和硬件方案后，请您联系我们的销售人员，我们会进一步为您提供购买服务和选择建议。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/hardware-introduce/",
        "teaser":null},{
        "title": "鸿之微-量子输运计算一体机",
        "excerpt":"可选硬件方案    鸿之微-量子输运计算一体机根据根据软件的计算特性，建议您选择：     均衡算力：双路CPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/nanodcal-hardware/",
        "teaser":null},{
        "title": "鸿之微-量子输运计算一体机",
        "excerpt":"  鸿之微量子输运计算一体机是鸿之微开发的一款搭载Nanodcal计算软件的科学模拟平台。     Nanodcal是基于NEGF-DFT的材料计算和电子器件量子输运模拟的通用大型计算软件程序包，主要用于模拟器件材料中的非线性、非平衡的量子输运过程，是目前最先进的基于第一性原理的输运软件。Nanodcal可以用于材料物性、分子电子学、自旋电子学、光电流、半导体电子学器件设计等方面的研究工作。   主要功能                                                  Nanodcal主要功能           选择硬件   经典应用          场效应晶体管器件设计        以弯曲的碳纳米管（CNT）为通道的场效应晶体管，研究了CNT的输运性质对弯曲的响应。             光电器件设计        研究了镍-黑磷-镍磁隧道结在光照下产生了Photogalvanic effects，且在不需要外界提供电荷电流情况系下，就能够产生纯自旋流的二维光电自旋电池。             四端口器件设计        研究了铁和镍四端口纳米结构的反常霍尔效应（AHE）。             二维柔性材料器件设计        研究导线非夹角情况下柔性黑磷弯曲后的输运性质。          参考文献      [1] Taylor J, Guo H, Wang J. Ab initio modeling of quantum transport properties of molecular electronic devices. Physical Review B, 2001, 63(24): 245407.       [2] Taylor J, Guo H, Wang J. Ab initio modeling of open systems: Charge transfer, electron conduction, and molecular switching of a C60 device. Physical Review B, 2001, 63(12): 121104(R).       [3] Zewen W, Yanxia X, Wei R, Yin W, Hong G. Ballistic transport in bent-shaped carbon nanotubes. Carbon, 2019, 149: 364-369.       [4] Yiqun X,Mingyan C,Zewen W,Yibin H,Yin W,Jian W,Hong G. Two-Dimensional Photogalvanic Spin-Battery. Physical Review Applied,2018,10:034005.       [5] Lei Z,Kui G,Lei L,Yu Z,Guanghua Y and Hong G. Quantum transport investigation of anomalous Hall resistance in four-probe magnetic. Physical Review B, 2016,94:081409(R).       [6] Junjun L,Lufeng R,Zewen W,Guiling Z and Yin W. All-phosphorus flexible devices with non-collinear electrodes: a first principles study. Physical Chemistry Chemical Physics, 2018, 20(10): 7167-7172.   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/nanodcal-software/",
        "teaser":null},{
        "title": "鸿之微-有机发光材料设计一体机",
        "excerpt":"可选硬件方案    鸿之微-有机发光材料设计一体机根据根据软件的计算特性，建议您选择：     均衡算力：双路CPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/oled-material-hardware/",
        "teaser":null},{
        "title": "鸿之微-有机发光材料设计一体机",
        "excerpt":"  鸿之微-有机发光材料设计一体机是鸿之微开发的一款搭载MOMAP计算软件的科学模拟平台。                                                                                                                          MOMAP部分应用示意图         MOMAP(Molecular Materials Property Prediction Package)是一款研究和设计有机分子材料发光和传输机理以及定量预测发光效率的软件。[1-3] 目前广泛应用于OLED发光和传输机理研究、新型OLED设计以及有机显示与照明材料、有机场效应材料、有机太阳能电池、以及有机光检测、生物传感、有机光通讯等领域。                                                  研发及技术支撑团队           选择硬件   理论贡献和软件特点      在多维耦合谐振子模型下，采用热振动关联函数方法发展了一系列单线态之间及单线态与三线态之间的辐射和无辐射跃迁速率的解析公式；   充分考虑了激发态与基态势能面之间的平移、扭曲、Duschinsky转动、Herzberg-Teller效应等，具有较大的普适性；   计算分子体系大；   成功应用于有机光电性能的机理研究、为实验合成提供了分子模板、为新型OLED材料的发展做出了贡献：            合理解释了聚集诱导发光现象、成功设计和合成了不含有自由转动的芳香环的奇异AIE分子；       理论设计预测了高效的光伏聚合物和蓝光有机金属磷光配合物；       理论设计预测了高效的红外/近红外聚合物；       在国际上首次实现了复杂有机分子和有机金属配合物的发光效率（荧光效率和磷光效率）的定量预测。           主要功能   定量预测分子荧光量子产率    在简谐近似下考虑Duschinsky转动效应，根据第一原理与MOMAP给出的内转换的关联函数可以对分子荧光性质进行定量计算，计算的辐射和无辐射速率与实验测量结果都非常吻合[4]。   定量预测分子磷光量子产率    MOMAP包含计算Ir（III）配合物的光致发光寿命和效率的通用方法，并考虑所有可能的竞争激发态失活过程，可以有效阐明其温度依赖效应。这种方法基于量子化学计算、激发态衰变速率方程以及动力学建模相结合，被证明是一种有效可靠的方法，适用于众多的Ir（III）配合物[5]。   从分子水平上解释OLED激发态电子结构和衰变过程    为了理解低激发态结构的性质，我们开发了用于计算激发态结构的密度矩阵重整化群（DMRG）理论及其对称化方案，给出了统一的关联函数方程用于计算激发态辐射和非辐射衰减速率。文献中强调了低频模式混合（Duschinsky旋转）对非辐射衰减的影响[6]。   高效率的OLED材料开发和计算方法    提出一种振动关联函数来评估激发态衰减速率，不仅合理估计了量子效率，而且还给出了聚集诱导发射（AIE）的定量计算[7]。   AIE理论验证    通过计算研究，提出了直接验证AIE过程的方法，即利用共振拉曼光谱（RRS）来探索AIE的微观机制[8]。   内转换速率    通过分析热振动关联函数来计算非辐射衰减速率常数（knr），考虑基于算符分裂近似的激子耦合效应（ECE）。第一性原理计算表明ECE对于H和J聚集体都使knr增加。另外，研究发现ECE对于AIEgens （聚集诱导的放射性发光素）是次要的[9]]。   有机/碳材料光电性质评估    描述了相关密度泛函理论（DFT）方法的最新进展，通过计算电子-振动耦合来检验光发射效率，载流子迁移率和热电优值[10]。   多尺度模拟有机半导体的电荷传输    采用量子化学，蒙特卡洛和分子动力学模拟相结合的多尺度方法的开发和应用，以评估有机半导体的电荷迁移率[11]。   注：使用MOMAP软件计算发表论文须引用论文[1-3]。   参考论文      [1] Niu, Y.; Li, W.; Peng, Q.; Geng H.; Yi, Y.; Wang, L.; Nan, G.; Wang D.; Shuai Z., Molecular Physics, 2018, doi: 10.1080/00268976.2017.1402966.       [2] Peng, Q.; Yi, Y.; Shuai, Z.; Shao, J., J. Am. Chem. Soc., 2007, 129, 9333-9339.       [3] Niu, Y.; Peng, Q.; Shuai, Z., Sci. China, Ser. B, 2008, 51, 1153-1158.       [4] Towards quantitative prediction of molecular luminescence quantum efficiency: role of Duschinsky rotation, J. Am. Chem. Soc. 2007, 129(30), 9333-9339       [5] General Approach To Compute Phosphorescent OLED Efficiency J. Phys. Chem. C, 2018, 122, 6340–6347       [6] Excited states structure and processes: Understanding organic light-emitting diodes at the molecular level. Physics Reports 2014, 537(4): 123-156       [7] Organic Light-emitting Diodes: Theoretical Understanding of Highly Efficient Materials and Develop-ment of Computational Methodology. Natl. Sci. Rev., 2017, 4, 224       [8] Spectroscopic Signature of the Aggregation-Induced Emission Phenomena Caused by Restricted Nonradiative Decay: A Theoretical Proposal. J. Phys. Chem. C, 2015, 119(9), 5040-5047       [9] Spectroscopic Signature of the Aggregation-Induced Emission Phenomena Caused by Restricted Nonradiative Decay: A Theoretical Proposal. J. Phys. Chem. C, 2015, 119(9), 5040-5047       [10] Computational Evaluation of Optoelectronic Properties for Organic/Carbon Materials. Accounts of Chemical research, 2014, 47(11), 3301-3309       [11] Computational Evaluation of Optoelectronic Properties for Organic/Carbon Materials. Accounts of Chemical research, 2014, 47(11), 3301-3309   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/oled-material-software/",
        "teaser":null},{
        "title": "鸿之微-大体系KS-DFT计算一体机",
        "excerpt":"可选硬件方案    鸿之微-二维材料设计一体机根据根据软件的计算特性，建议您选择：     最强算力：双路CPU + 四路GPU配置方案   进阶算力：双路CPU + 双路GPU配置方案        联系购买   鸿之微一体机线上销售渠道正在建设中，敬请您联系公司销售人员进行进一步沟通！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/rescu-hardware/",
        "teaser":null},{
        "title": "鸿之微-大体系KS-DFT计算一体机",
        "excerpt":"  鸿之微大体系KS-DFT计算一体机是鸿之微开发的一款搭载RESCU计算软件的科学模拟平台。     RESCU是一款仅仅用小型计算机就能研究超大体系的KS-DFT计算软件。 RESCU是Real space Electronic Structure CalcUlator（实空间电子结构计算程序）的缩写，它的核心是一种全新、极其强大、并行效率超高的KS-DFT自洽计算方法。     RESCU可以使用一体机种有限的计算机资源，并且还可以使用GPU进行加速计算，来计算包含一千、数千、上万体系的电子结构性质。RESCU是解决超大体系KS-DFT问题的里程碑式的新方法，正在被应用于金属、半导体、绝缘体、液体、DNA、1维、2维、3维、表面、分子、磁性、非磁性、杂质、固体等等不同系统的KS-DFT计算。   主要功能                                                  RESCU主要功能           选择硬件   理论计算和软件特点           利用数值化原子轨道（NAO )生成非常有效的初始希尔伯特子空间。            利用Chebyshev滤波，完全避免了在全希尔伯特空间求解本征值来精确求解KS-DFT的过程。            通过新颖的计算过程，将求解KS-DFT方程的O()度规大大改善。即使当电子数N达到数万，RESCU的计算度规也仅仅为O()。            在256核的小型计算平台上，使用实空间离散格点基矢，计算超过8000个原子规模的体系；而若用NAO基矢，体系的规模升高至约15000个原子的别。在更大的计算机上，可以期待研究超大的系统。            当系统包含数万个电子时，RESCU采用全新的partial Rayleigh-Ritz算法保证了超高的计算效率。            计算精度：使用实空间离散格点基矢时与其他标准的平面波基矢KS-DFT软件在同一级别；用NAO基矢时与其他标准的 LCAO基矢KS-DFT软件在同一级别。         参考论文      [1]\tMichaud-Rioux V, Zhang L, Guo H. RESCU: A real space electronic structure method[J]. Journal of Computational Physics, 2016,307:593-613.       [2]\tKang P, Zhang W, Michaud-Rioux V, et al. Moiré impurities in twisted bilayer black phosphorus: Effects on the carrier mobility[J]. Physical Review B, 2017,96(19):195406.       [3]\tKang P, Michaud-Rioux V, Kong X, et al. Calculated carrier mobility of h-BN/γ-InSe/h-BN van der Waals heterostructures[J]. 2D Materials, 2017,4(4):45014.       [4]\tChowdhury F A, Sadaf S M, Shi Q, et al. Optically active dilute-antimonide III-nitride nanostructures for optoelectronic devices[J]. Applied Physics Letters, 2017,111(6):61101.       [5]\tHu C, Michaud-Rioux V, Yao W, et al. Moiré Valleytronics: Realizing Dense Arrays of Topological Helical Channels[J]. Physical Review Letters, 2018,121(18):186403.       [6]\tLin W, Li J, Wang W, et al. Electronic Structure and Band Gap Engineering of Two-Dimensional Octagon-Nitrogene[J]. Scientific Reports, 2018,8(1):1674.       [7]\tLin W, Liang S, He C, et al. Stabilities and novel electronic structures of three carbon nitride bilayers[J]. Scientific Reports, 2019,9(1):1025.       [8]\tHu C, Michaud-Rioux V, Kong X, et al. Dirac electrons in Moiré superlattice: From two to three dimensions[J]. Physical Review Materials, 2017,1(6):061003.       [9]\tShi Q, Chen Y, Chowdhury F A, et al. Band engineering of GaSbN alloy for solar fuel applications[J]. Physical Review Materials, 2017,1(3):034602.       [10]\tLiu D, Chen X, Hu Y, et al. Raman enhancement on ultra-clean graphene quantum dots produced by quasi-equilibrium plasma-enhanced chemical vapor deposition[J]. Nature Communications, 2018,9(1):193.       [11]\tChen Y, Chen J, Michaud-Rioux V, et al. Efficient evaluation of nonlocal operators in density functional theory[J]. Physical Review B, 2018,97(7):075139.       [12]\tYuan W, Niu G, Xian Y, et al. In Situ Regulating the Order–Disorder Phase Transition in Cs2AgBiBr6 Single Crystal toward the Application in an X-Ray Detector[J]. Advanced Functional Materials, 2019,29(20):1900234.       [13]\tJin H, Michaud-Rioux V, Gong Z, et al. Size dependence in two-dimensional lateral heterostructures of transition metal dichalcogenides[J]. Journal of Materials Chemistry C, 2019,7(13):3837-3842.       [14]\tChen X, Xu Y, Wang J, et al. Valley filtering effect of phonons in graphene with a grain boundary[J]. Physical Review B, 2019,99(6):064302.       [15]\tWang H, Wu H, Xian Y, et al. Controllable CsxFA1-xPbI3 Single-Crystal Morphology via Rationally Regulating the Diffusion and Collision of Micelles toward High-Performance Photon Detectors[J]. ACS Applied Materials &amp; Interfaces, 2019,11(14):13812-13821.   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwhardware/rescu-software/",
        "teaser":null},{
        "title": "鸿之微“一体机”-研究课题顾问服务",
        "excerpt":"  鸿之微“一体机”是鸿之微精心打造的具有“一”流“体”验的高性能计算一体“机”。致力于为客户量身定制材料模拟解决方案，同时提供相关技术支持服务，为客户的科研项目顺利进行顺利开展提供贴心保障。   研究课题顾问服务     鸿之微科技研究团队在国内外学术界享有较高的学术声誉，团队成员在材料设计、半导体器件设计、磁性器件设计、新兴电子材料设计等方面拥有丰富的研究经验。     如您需要我们为您提供研究课题顾问服务，请一并在联系购买时向销售人员提出，我们的销售人员会为您安排技术人员与您联系，并进行技术方案评估。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwservice/research-service/",
        "teaser":null},{
        "title": "鸿之微“一体机”-服务保障",
        "excerpt":"  鸿之微“一体机”是鸿之微精心打造的具有“一”流“体”验的高性能计算一体“机”。致力于为客户量身定制材料模拟解决方案，同时提供相关技术支持服务，为客户的科研项目顺利进行顺利开展提供贴心保障。   一套服务     鸿之微“一体机”定位于材料模拟方面初阶的研究人员（包括但不限于），针对这些材料模拟研究团队的痛点，为鸿之微“一体机”客户提供一套服务的解决方案，其中包含：           一流入门指导教程与案例            一次对应软件课程培训服务            一次对应研究课题顾问服务       注：默认鸿之微“一体机”价格方案中不含软件课程培训服务核和课题顾问服务。如您需要，须额外购买，我们会为您提供鸿之微“一体机”用户优惠服务价。   一流软硬件保障   软件保障    鸿之微“一体机”为您提供专业技术维护，为您提供三年计算软件免费升级服务，三年配套软件免费维护服务。   注：鸿之微“一体机”默认不为您提供root密码。如您需要root密码，将不再提供上述三年配套软件免费维护服务。如您使用中配套软件出现故障，需您自行处置，或联系鸿之微提供付费服务。   硬件保障    鸿之微“一体机”保证选用一线品牌一流配件，并为您提供三年硬件质保，助您放心使用。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwservice/service-introduce/",
        "teaser":null},{
        "title": "鸿之微“一体机”-软件课程培训服务",
        "excerpt":"  鸿之微“一体机”是鸿之微精心打造的具有“一”流“体”验的高性能计算一体“机”。致力于为客户量身定制材料模拟解决方案，同时提供相关技术支持服务，为客户的科研项目顺利进行顺利开展提供贴心保障。   软件课程培训服务     鸿之微公司会定期开展软件培训服务，鸿之微公司将为“一体机”用户提供优惠价参加软件培训服务。   查看鸿之微软件培训日程   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwservice/software-service/",
        "teaser":null},{
        "title": "CentOS 操作系统使用简介",
        "excerpt":"  CentOS（Community Enterprise Operating System，中文意思是社区企业操作系统）是Linux发行版之一，CentOS是一个基于Red Hat Linux提供的可自由使用源代码的企业级Linux发行版本，而且在RHEL的基础上修正了不少已知的Bug，相对于其他Linux发行版，其稳定性值得信赖。   开始使用     我们在安装操作系统时，桌面环境在预装的GNOME、KDE之外，还为您定制了Cinnamon桌面环境，Cinnamon桌面具有接近Windows操作习惯等优点，帮您在初次接触Linux系统桌面计算时获得最优良的用户体验。您可以根据自己的使用习惯选择喜欢或习惯的桌面。   进入桌面     当您正常开机点亮鸿之微“一体机”后，您可按下图中操作流程进入桌面，需要操作处参见图中白色箭头。                                                                                                                          点击账户名hzwtech，选择桌面（图中以Cinnamon为例），输入密码hzw@123、点击Sigh in登陆系统         进入桌面后，可以看到如下图所示桌面，下文中以Cinnamon桌面为例。Cinnamon桌面与Windows桌面很多相似之处，例如，底部有一个类似任务栏的面板。操作习惯也与Windows操作习惯接近。下面介绍CentOS最重要的几样功能组件，更详细的使用方法您可以在互联网上直接搜索相关信息，GNOME、KDE桌面的使用方法也基本类似。                                                                                      鸿之微“一体机”桌面示意图         鼠标点击屏幕左下角的Menu图标可以显示开始菜单，这与Windows的开始菜单类似，随系统预装的应用软件都可以找到相应的快捷方式，点击即可开始使用。任务栏右下角分别有语言、账户、网络等设置，点击可以进行设置，通常情况不建议您将系统语言设置为中文，因为这会给后续操作，如使用cd命令切换路径等操作时带来一些麻烦，如果您为了更快的熟悉操作系统，也可以将系统语言设置为中文。   文件管理&amp;文本编辑    Cinnamon桌面中文件管理&amp;文本编辑使用方式与Windows中资源管理器类似，左键双击桌面pbs_scripts_example文件夹图标，可以打开此文件夹如下图所示。                                                  文件管理&amp;文本编辑         继续左键双击pbs_scripts_example文件夹中文本文件rescu.pbs图标，系统会默认使用文本编辑器gedit打开此文件。gedit文本编辑器是纯文本编辑器，类似于Windows的记事本，可以用来编辑各计算软件的输入文件，查看输出文件等。如果发现图标右下角有小锁图标，这是由于您当前使用的账户没有修改此文件的权限，您只能查看此文件不能修改。   注：关于Linux文件权限，您有必要在互联网上了解更多，这是您以后进行科学计算中非常重要的操作基础。   命令行终端&amp;常用命令    现代Linux发行版，我们可以通过图形界面完成大部分常规操作。但是Linux系统精髓和奥义集中于 Terminal命令行终端，通过Terminal命令行终端才可以使用Linux操作系统的全部功能，同时还可以编写shell脚本实现各种自定义组合操作，完全释放Linux系统的强大潜能。     在后面空白处点击右键，打开菜单点击Open in Terminal，便可以打开Terminal命令行终端。在Terminal命令行终端中，可以敲入命令，然后按键盘回车Enter执行。                                                  Terminal命令行终端         Linux系统集成上千条命令，每条命令拥有许多不同的选项，以完成不同的功能。通常情况难以完全记住这些命令和他们的选项。在鸿之微“一体机”中我们精心制作了一张包含了80%常用操作命令的桌面壁纸，帮助您快速查找，在大部分情况下不需要上网查阅完成需要的操作。   注：在下面我们列出来您需要掌握的最常用的命令。这些命令的帮助信息可以通过在命令后添加选项--help来查看，例如：输入ls --help就会显示ls命令的帮助信息。还有一种查看帮助的方法就是使用man命令，例如：输入man ls就会显示ls命令的帮助信息。   文件和目录操作  ls # 显示当前目录内容 ll # 以列表的方式显示文件信息，每个文件一行 cd /home # 进入'/home'目录 cd .. # 返回上一级目录 cd ~ # 进入用户的主目录 cd - # 返回上次所在的目录 pwd # 显示当前所在目录 mkdir dir1 # 在当前目录下创建'dir1'文件夹 rm file1 # 删除当前目录下'file1’文件 rm -rf dir1 # 删除当前目录下'dir1'文件夹及其内文件 cp file1 file2 # 将file1文件复制为file2文件 cp dir1/* . # 复制目录dir1下的所有文件到当前工作目录 cp -r dir1 dir2 # 复制目录dir1下文件到目录dir2 mv dir1 dir2 # 将目录'dir1'重命名为'dir2’ mv file1 file2 # 将目录'file1'重命名为'file2'   文本查看与编辑  vi file1 # 使用vi编辑器编辑'file1' cat file1 # 查看文本文件'file1’内容 cat -n file1 # 查看'file1'的内容并标示行数 head -5 file1 # 查看'file1'的前五行 tail -3 file1 # 查看'file1'的最后五行 less file1 # 查看一个长文本文件'file1’的内容   文件执行与查找  chmod +x file1 # 给文件'file1'加上可执行权限 source file1 # 执行可执行文件'file1’ chown user1 file1 # 将文件'file1'的所有人属性改为'user1’ chown -R user1 dir1 # 将目录'dir1'及其目录下所有文件夹的所有人属性改为'user1’ chown user1:group1 file1 #改变文件'file1'的所有人和群组属性为为'user1'和'group1’  find / -name file1 # 从 /目录开始查找文件名为'file1'的文件和目录 whereis code1 # 显示'code1'二进制文件、源码或man的位置 which code1 # 显示'code1'二进制文件或可执行文件的完整路径 # 文件压缩和解压 tar -zcvf file1.tar.gz file1 # 把'file1'打包并压缩成'file1.tar.gz’文件 tar -zxvf file1.tar.gz # 解压并释放压缩包文件'file1.tar.gz'至当前目录 unzip file1.zip # 解压zip格式的压缩包'file1.zip'到当前目录   网络配置与服务  ssh user1@node1 # 使用'user1'用户身份远程访问node1主机 ifconfig # 查看网络配置信息 ping www.baidu.com # 用来ping命令查看网络是否接通 service network restart # 重启网络服务 # 查看网卡配置文件信息，网卡名为'eth0’ cat /etc/sysconfig/network-scripts/ifcfg-eth0 cat /etc/hosts # 查看主机名和IP的映射关系配置文件  系统信息和管理  top # 实时查看系统负载，输入q退出 free -h # 查看内存和使用情况 pstree # 以树状图显示程序 date # 显示系统日期 lscpu # 查看cpu的信息 uname -a # 查看内核信息  su - # 切换到root权限 shutdown -h now # 关机 reboot # 重启 logout # 注销  useradd user1 # 创建用户'user1’ userdel user1 # 删除用户'user1’ passwd # 修改用户密码   磁盘空间、文件夹大小查看  df -h # 查看已经挂载的分区磁盘列表和使用空间 du -sh * # 查看当前目录下每个子文件夹占用磁盘空间 du -sh dir1 # 查看目录'dir1'占用磁盘空间 cat /etc/fstab # 查看分区挂载配置信息 lsblk # 查看磁盘块设备信息   软件包安装和升级  vi ~/.bashrc # 编辑用户环境变量文件 source ~/.bashrc # 执行.bashrc配置文件 yum install package1 # 下载并安装一个软件包'package1’ rpm -qa | grep package1 # 查看是否装有'package1'软件包   Torque pbs任务管理命令  # 鸿之微“一体机”软件PBS脚本文件路径 cd /public/pbs_script_example  qsub jobfile1 # 提交任务文件'jobfile1' qdel id1 # 删除Job ID为'id1'的计算任务 qstat # 查看当前已提交任务计算状态 qnodes # 查看各计算节点硬件状态   远程登录    鸿之微“一体机”连接到互联网后，您还可以远程登录鸿之微“一体机”。远程登录时，需要提前知道鸿之微“一体机”的网络ip地址（ip地址可以通过在终端中输入ifconfig命令来获得）。   如果您登陆的设备（例如您使用Windows办公电脑进行远程登陆）跟鸿之微“一体机”处于同一局域网内，您可以使用鸿之微“一体机”的局域网ip登陆。否则，您需要为鸿之微“一体机”配置公网ip。   从Linux设备远程登陆到鸿之微“一体机”    如果您在另外一台linux机器上登录鸿之微“一体机”，直接在终端中使用ssh命令加上用户名和网络地址即可。   ssh hzwtech@192.168.1.100 #其中192.168.1.100为鸿之微“一体机”网络地址，需要根据实际情况调整   从Windows设备远程登陆到鸿之微“一体机”    如果您在Windows机器上登录鸿之微“一体机”（如您的办公电脑，这也是最常见的情况），您需要使用支持ssh的软件，推荐您使用XShell或MobaXterm。如果需要跟鸿之微“一体机”进行文件传输，需要使用支持scp的软件，最常用的免费软件就是WinSCP。您也可以根据自己的使用习惯选择。这些软件使用中均需要提前知道鸿之微“一体机”的网络ip地址     XShell（官网可注册家庭/教育免费版）   MobaXterm （官方免费）   WinSCP （官方免费）                                                  使用WinSCP和XShell软件，从Windows设备远程登陆到鸿之微“一体机”       Vim文本编辑器    在终端模式下，通常没有图形界面，如gedit等需要图形界面的文本编辑器会无法工作。如果在终端模式下需要进行文本编辑，需要使用特殊的文本编辑工具，其中Vim文本编辑器是最常用的编辑工具之一。     此处仅是浅显地描述最常用的功能，更多信息请上网查阅Vim文本编辑器的使用方法。Vim分成命令模式，插入模式和替换模式。     插入模式和替换模式跟其它的文本编辑器类似，命令模式是Vim特有的。Vim启动以后就进入命令模式，可以使用h(左) j(下) k(上) l(右)键进行光标移动。在命令模式中输入i进入插入模式，插入模式和替换模式可以通过插入键来切换。在插入模式和替换模式中，我们可以对文件内容进行相应的修改，修改完成以后可以按Esc键可以退回到命令模式。Vim中集成了许多操作命令，下面介绍其中最常用的一些命令。  :q — 退出Vim :q! — 退出Vim，忽略对文本的编辑 :w — 把文本文件保存 :wq — 把文本文件保存，并退出Vim gg — 到文件头部 G — 到文件尾部 11G — 跳转到11行，数字可以变化，例如123G就是跳转到123行 x — 删除当前光标所在的字符 dd — 删除当前光标所在的行 yy — 复制当前光标所在的行 p — 粘贴被删除或者复制的文本 u — 回复上一个操作 CTRL-r — 重做上次撤销的操作      继续学习鸿之微“一体机”教程-计算模拟环境使用简介  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/centos-introduce/",
        "teaser":null},{
        "title": "Device Studio介绍",
        "excerpt":"   Device Studio是基于QT的图形界面软件，具有友好的图形操作环境，流畅的使用体验，其主要功能有：     能够进行电子器件的结构搭建与仿真；   能够进行晶体结构和纳米器件的建模；   能够生成输入文件并进行管理；   可以将输入文件在本地或远程进行计算，并控制计算流程；   可以将计算结果进行可视化显示和分析。   开始使用Device Studio     鸿之微“一体机”均已经预装Device Studio，用户不需要自行安装，可以直接调用。Device Studio安装在/software/DeviceStudio/DeviceStudio目录中，其中包含了Device Studio的程序、文档和实例。Device Studio的调用脚本devicestudio.sh放在/software/DeviceStudio/DeviceStudio/bin目录中。     用户可以通过以下两种方式，开始使用Device Studio：     双击桌面DeviceStudio图标，即可开始使用   点击鼠标右键，选择Open in terminal打开终端，执行下面命令，开始使用     sh /software/DeviceStudio/DeviceStudio/devicestudio.sh              开始学习使用Device Studio  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/device-studio-introduce/",
        "teaser":null},{
        "title": "Device Studio使用手册",
        "excerpt":"  Device Studio程序是基于QT的图形界面软件，所以必须通过图形界面才能使用。如果用户想要在“一体机””中使用Device Studio，建议直接在一体机中进行操作，尽量不要使用第三方中终端软件进行调用，如使用支持图形界面的第三方终端软件进行调用，Device Studio会出现卡顿，死机等现象。   开始使用Device Studio           双击桌面DeviceStudio图标，打开Device studio软件主界面。            选择Create a new Project，点击OK。             输入新建项目名称，这里以test为例，之后点击Save保存。             点击左上角的File-Import Local，单击Si.hzw文件并点击Open， Si.hzw的路径为DeviceStudio/material/3Dmaterial/Semicondutor。             双击Project栏下的Si.hzw，之后点击Simulator-RESCU-SCF Calculation生成RESCU的自洽的输入文件。在本例中我们将Basic settings中的k-point Sampling设置为[5, 5, 5]，之后点击Generate files生成自洽计算输入文件。             生成RESCU的能带计算的输入文件：Simulator-RESCU-Analysis，双击BandStructure，点击Generate files生成相应文件；             在Project栏下，可以看到RESCU-Crystal下生成了scf.input，Bandstructure.input文件。             右键scf.input文件，选择run，设置并行核数，本例中设置为8，并点击run。             之后进行能带计算：右键Bandstructure.input文件，选择run，设置并行核数，本例中设置为8，并点击run，可以看到在Job Manager中两个任务正在运行。             等待任务计算完成，Job Manager中的状态变为Finished，此时可以看到Project栏下多了计算日志文件RESCUlog.out和能带输出结果Bandstructure.txt文件。             右键Bandstructure.txt，选择Show View，显示能带计算结果。             计算完成。      ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/device-studio-quick-guide/",
        "teaser":null},{
        "title": "计算模拟环境使用简介",
        "excerpt":"  鸿之微“一体机”已为您集成了一套完整的计算模拟环境，包括：     程序编译环境 GCC   并行计算模块 OpenMPI   作业管理系统 Torque pbs   环境变量管理工具 Environment Modules   注：这些软件都是免费的开源的自由软件，存在庞大的用户群，本章针对这些软件做简要的介绍，更详细的使用方法可以在互联网上直接搜索相关信息。   预装软件安装路径     鸿之微“一体机”为您预装的计算和管理软件均安装在以下路径，您可以在有需求时查看：     /public # 软件安装文件夹   /public/bin # 可执行软件存放文件夹   /software # 软件安装包存放文件夹   程序编译环境     鸿之微“一体机”中安装通用编译器GCC，可以编译C语言(gcc)、C++语言(g++)和Fortran语言(gfortran)。如果您有其他计算模拟软件或者自己编写的程序，可以使用上述编译器编译并在鸿之微“一体机”上运行。   例如：您有一个用Fortran语言编写的蒙特卡洛模拟程序mc.f，首先需要通过网络或者移动存储设备复制到器件模拟一体机上，然后使用命令gfortran -o mc mc.f获得一个可执行程序mc，最后使用命令./mc在鸿之微“一体机”上运行。   并行计算模块     并行计算模块是计算模拟环境中非常重要的一部分，大型的计算模拟程序都支持并行计算，这样可以突破单机限制使计算模拟的速度更快和模拟更大尺度的系统。在鸿之微“一体机”上，我们安装了OpenMPI软件，支持C语言(mpicc)、C++语言(mpic++)和Fortran语言(mpif77和mpif90)。   例如，您有一个用Fortran语言编写的并行蒙特卡洛模拟程序mcp.f，首先需要通过网络或者移动存储设备复制到鸿之微“一体机”上，然后使用命令mpif90 -o mcp mcp.f获得一个可执行程序mcp，最后使用命令mpirun -n 8 ./mcp在鸿之微“一体机”上运行8核并行计算（并行数量可以自行修改，最好不要超过“一体机”的总核数）。     鸿之微“一体机”针对不同计算软件分别安装不同并行计算环境，如果需要使用并行计算，需针对特定的软件在计算前手动加载环境变量，详见后文环境变量加载。   环境变量加载     在 Linux 超算平台上，通常会安装有不同版本的多种编译器和其他软件等，如常用的编译器有 intel 和 gnu，常用的 MPI 并行库包括 intel mpi，openmpi，mpich2 等，而且对于同一软件，还包含不同的版本或采用不同编译设置得到的可执行程序和链接库等。在使用这些程序时，经常需要对环境变量进行修改。并且由于程序编译时会调用不同类型编译器或第三库，这时程序之间还存在着依赖关系。这使得当执行某个特定版本的程序时，环境变量的修改变得十分复杂。     Environment Modules软件包是一个简化 shell 初始化的工具，它允许用户在使用 modulefiles 进行会话期间轻松修改其环境。每个模块文件都包含为应用程序配置 shell 所需的信息。鸿之微“一体机”以为您预装Environment Modules软件包，Modules软件包安装路径为/public/modules-4.2.2。您可以用以下命令修改您需要加载的环境变量。   module avial                   #当前已有modules module list                    #当前加载modules列表 module load module-name       #加载module-name moudule unload module-name    #卸载module-name module switch module-name     #切换到module-name   作业管理系统     作业管理系统提供计算作业的提交、调度、执行等功能，对于大型计算机集群作业管理系统是整个系统中非常重要的一部分。在鸿之微“一体机”中已为您预装了常用作业管理系统Torque PBS。     您使用hzwtech用户登陆鸿之微“一体机”桌面时，可以在桌面看到一个名为pbs_script_example的文件夹。或者，您远程登陆时可以使用cd命令切换到路径/public/pbs_script_example。在pbs_script_example文件夹中存放的是用于不同计算软件的作业管理系统的提交实例。实例脚本的文件名是nanodcal.pbs等。   [hzwtech@hzwtech]$ pwd /public/pbs_script_example [hzwtech@hzwtech]$ ls lammps.pbs  nanodcal.pbs  pbs_example.pbs rescu.pbs  vasp.pbs     以nanodcal.pbs文件为例，文件内容如下。  #!/bin/sh #PBS -N nanodcal_job_name #PBS -o _out.dat #PBS -e _err.dat #PBS -q batch #PBS -l nodes=1:ppn=1 #PBS -l walltime=240:00:00  # load the needed environment path  module load gcc/4.7.4-Nanodcal module unload mpi/openmpi-1.8.5 module load mpi/openmpi-1.8.5-Nanodcal module load Matlab/R2015B  NCPU=`wc -l &lt; $PBS_NODEFILE` cd $PBS_O_WORKDIR  mpirun -hostfile $PBS_NODEFILE -n $NCPU matlab -nodisplay -r \"nanodcal -parallel -doexit input.txt\"      其中第1行是系统脚本注释，不用修改；第2-7行是作业管理系统参数；第8-15行是需要执行的命令行。   第2行定义作业名称，此处为nanodcal_job_name，将会显示在作业队列中。如果您有多个作业需要提交，建议修改这个名称以方便在作业队列中区分。   第3行和第4行为将程序运行中的标准输出和标准错误，输出到_out.dat和_err.dat文件中。   第5行定义任务提交到哪个队列中，此处为batch队列。   第6行定义需要的计算资源，即这个作业需要多少个节点nodes和每个节点多少个核ppn。在鸿之微“一体机”中，通常只有一个计算节点，所以nodes此处=1，至于ppn=几，您可根据需要自行设置，但是不能大于“一体机”的总核数。   第7行定义计算时间，即这个计算作业最长允许计算的时间，超过最长时间，任务会被系统自动终止。此处为最长时间是240小时，这个参数您需要根据作业的计算时长自行设定，一般可以设置较大，如2400:00:00。   第8-12行为使用module命令加载nanodcal计算中需要加载的环境变量。   第13行为统计本次本次计算中需要用到的总核数，以用于mpirun并行计算。   第14行表示脚本需要从当前目录切换到工作目录，工作目录就是提交作业的目录。这一行是必须的，缺省的当前目录是用户根目录，需要切换到工作目录才能进行计算，这一行必须放在其他需要执行的命令行之前。   第15行是需要执行的nanodcal并行计算命令行。   您可以根据需要把这些行修改成自己需要的计算命令。   PBS作业管理系统常用命令  qsub jobfile1 # 提交任务文件'jobfile1' qdel id1 # 删除Job ID为'id1'的计算任务 qstat # 查看当前已提交任务计算状态 qnodes # 查看各计算节点硬件状态  PBS作业管理系统作业提交流程     首先使用cd命令切换到路径/public/pbs_script_example。当前“一体机”中没有任何计算作业，输入qstat命令，可以看到没有任何显示结果。  [hzwtech@hzwtech]$  qstat [hzwtech@hzwtech]$    使用qsub命令提交6次例子pbs_example.pbs，同时可以得到它们的任务编号。  [hzwtech@hzwtech]$ qsub pbs_example.sh 11.hzwtech [hzwtech@hzwtech]$ qsub pbs_example.sh 12.hzwtech [hzwtech@hzwtech]$ qsub pbs_example.sh 13.hzwtech [hzwtech@hzwtech]$ qsub pbs_example.sh 14.hzwtech [hzwtech@hzwtech]$ qsub pbs_example.sh 15.hzwtech [hzwtech@hzwtech]$ qsub pbs_example.sh 16.hzwtech    接下来再次输入qstat命令查看计算队列。  [hzwtech@hzwtech]$ qstat Job ID         Name        User         Time Use  S Queue -------------- ----------- ----------- ---------- - ----- 11.hzwtech     example     hzwtech             0  R batch 12.hzwtech     example     hzwtech             0  R batch 13.hzwtech     example     hzwtech             0  R batch 14.hzwtech     example     hzwtech             0  Q batch 15.hzwtech     example     hzwtech             0  Q batch 16.hzwtech     example     hzwtech             0  Q batch    现在可以在计算队列中看到刚才提交的6个作业，每个作业申请8核，如果一体机有24核，那么将会只有前三个作业在计算R，后三个作业还在排队Q（倒数第二列表示计算状态）。     如果想要删除一个作业，要先确定任务编号，然后运行qdel命令，随后查看计算队列确认被中止。  [hzwtech@hzwtech]$ qdel 16 [hzwtech@hzwtech]$ qstat Job ID         Name        User         Time Use  S Queue -------------- ----------- ----------- ---------- - ----- 11.hzwtech     example     hzwtech             0  R workq 12.hzwtech     example     hzwtech             0  R workq 13.hzwtech     example     hzwtech             0  R workq 14.hzwtech     example     hzwtech             0  Q workq 15.hzwtech     example     hzwtech             0  Q workq 16.hzwtech     example     hzwtech             0  C workq    现在可以在看到编号为16计算作业的状态发生变化，从原来的等待状态Q变成完成状态C，说明任务16已经中止，不会被执行。     等待几分钟后，再次查看计算队列，所有提交的例子都已经完成。  hzw@hzwtech:~/pbs_guide&gt; qstat Job ID         Name        User         Time Use  S Queue -------------- ----------- ----------- ---------- - ----- 11.hzwtech     example     hzwtech      00:00:00  C workq 12.hzwtech     example     hzwtech      00:00:00  C workq 13.hzwtech     example     hzwtech      00:00:00  C workq 14.hzwtech     example     hzwtech      00:00:00  C workq 15.hzwtech     example     hzwtech      00:00:00  C workq 16.hzwtech     example     hzwtech             0  C workq    鸿之微“一体机”祝您使用愉快 :smile: ！  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/environment-introduce/",
        "teaser":null},{
        "title": "FIRSTt软件的使用介绍",
        "excerpt":"RESCU软件介绍    RESCU(Real space Electronic Structure CalcUlator)，由于其新颖的算法和超高的并行效率，使其在大体系下有着很抢眼的表现，在使用相同资源及不牺牲精度的情况下能够计算更大体系的电子结构；同时 RESCU 适用于各类计算资源，从笔记本电脑、桌面单机、到16核、64核、256核、到更大的超算、包括用 GPU 加速等等，可以用来计算一千、数千、上万乃至更大体系的电子结构性质。RESCU 是解决超大体系 KS-DFT 问题的里程碑式的新方法，正在被应用于金属、半导体、绝缘体、液体、DNA、1维、2维、3维、表面、分子、磁性、非磁性、杂质、固体等等不同系统的 KS-DFT 计算。  RESCU安装环境    一体机版RESCU安装目录为：/software/rescu-2.1.0。在/public目录下我们还安装了一些运行RESCU所需要的软件，如openmpi，scalapack，lapack，openblas，libxc，mcr等。在该目录下的RESCU_env文件即为RESCU运行所需的环境变量配置文件。用户可以在Linux终端中使用source命令加载该配置文件，即运行：source /public/Hzwtech/RESCUPackage/RESCU_env。此时可以通过which 命令确认环境是否加载完成。例如：  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun   RESCU软件使用    一体机版RESCU与单机版RESCU在使用上基本一致，唯一的区别在于一体机版的RESCU是在Linux下使用命令行的方法运行RESCU，而单机版的RESCU是在matlab中输入运行命令运行RESCU。因此我们将选取RESCU应用教程中Si体系为例，通过自洽、能带和态密度的计算为用户演示一体机版RESCU的使用。其他RESCU应用教程中的案例用户可以根据该案例自行练习。   注： 该简单教程为使用终端（terminal）进行RESCU计算，请用户先鼠标右键打开一个终端（terminal）。   Si体系(无自旋体系degenerate)          (1) 自洽计算      1. 进入指定文件夹及查看相关文件         使用cd命令进入案例Si体系的文件夹:/home/hzw/RESCU_example/Si/REAL 使用ls命令查看REAL目录下的文件，对于自洽计算而言需要准备主要参数文件scf.input，原子结构文件Si.xyz和基组文件Si_DZP.mat。     使用cat命令查看scf.input文件：   [hzw@hzwhpc examples]$ cat al_lcao_scf.input LCAO.status = true info.savepath = 'results/al_lcao_scf' info.calculationType = 'self-consistent' atom.element = 1 atom.xyz = [0 0 0] domain.latvec = ~eye(3)/2*7.652445391; %  positions in angstrom domain.lowres = 2/3 element(1).species = 'Al' element(1).path = './Al_AtomicData.mat' functional.list = {'XC_LDA_X','XC_LDA_C_PW'} eigensolver.emptyBand = 8 kpoint.gridn = [3,3,3] option.saveLevel=2     使用cat命令查看Si.xyz文件：   [hzw@hzwhpc examples]$ cat Si8.xyz 8 Si8 Si 0.26            0         0 Si 0         5.1052    5.1052 Si 5.1052         0    5.1052 Si 5.1052    5.1052         0 Si 2.5526    2.5526    2.5526 Si 2.5526    7.6578    7.6578 Si 7.6578    2.5526    7.6578 Si 7.6578    7.6578    2.5526   2. 使用pbs排队系统进行自洽计算     在一体机中使用的是pbs排队系统来提交RESCU计算任务，相应的命令都写在rescu.pbs脚本中，而rescu.pbs脚本存放在/home/hzw/bin目录下。     使用cp命令将rescu.pbs文件复制到/home/hzw/RESCU_example/Si/REAL，并使用ls命令查看是否成功。  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun     使用cat命令查看rescu.pbs文件：  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun   蓝色方框前面的为pbs排队系统中的固定格式，具体含义详见pbs介绍章节。这里我们只介绍蓝色方框中的两句命令。     第一句：source /public/Hzwtech/RESCUPackage/RESCU_env 为加载运行RESCU所需的环境变量。     第二句：mpirun -np 4 RESCU –smi -i scf.input 为使用mpirun和scalapack进行RESCU并行计算，整个计算调用了4个核。更细节的理解如下：     整句话分解成mpirun -np 4和RESCU –smi -i scf.input两部分，可以理解为mpirun调用RESCU进行计算。其中mpirun –np 4 为mpirun调用4核进行计算，-np为mpirun的内部命令；RESCU –smi -i scf.input中–smi表示在RESCU计算过程中将使用scalapack并行加速，-i scf.input表示RESCU计算过程中将scf.input作为输入（input）的文件，i即为input的简写。因此RESCU –smi -i scf.input表示RESCU将scf.input文件作为输入文件并使用scalapack进行并行加速。     在/home/hzw/RESCU_example/Si/REAL目录下使用qsub rescu.pbs进行自洽计算，并通过qstat命令进行计算任务查看。   [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun   3.\t输出日志文件及结果查看    自洽结束后，在计算目录会产生输出日志文件：RESCUlog.out文件和计算结果文件夹results，在results中存在着主要输出文件Si_scf.mat和Si_scf.h5。   Notes:1.如果需要修改scf.input或者Atom.xyz文件，可以通过使用vi命令实现，具体使用见Linux基础。2.真实的计算案例中请用户谨慎的选取实空间格点数目domain.lowres及倒空间格点数目 kpoint.gridn，这两个参数与计算结果的精度和可靠性休戚相关，其中domain.lowres尽量不大于0.4。3.自洽计算的输出文件Si_scf.mat和Si_scf.h5需要使用matlab来加载，如果一体机中用户没有安装matlab，用户可以将Si_scf.mat和Si_scf.h5下载到本地电脑用matlab进行加载查看。4.本自洽计算中只使用了4核进行计算，用户在计算真实案例时可以通过修改-np后面的数字来修改核数。5.在计算过程中用户需要查看RESCUlog.out文件中## PARALLEL ##的内容来确认是否开启了mpirun并行和scalapack并行，如下图所示：  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun    Number of processes = 4表示计算中mpirun并行所调用的核数；Parallel config (smi,gpu,k-para) = (1,0,0) 表示开启了scalapack并行进行加速，其中smi表示的就是scalapack。在计算过程中请务必确保并行信息无误。           (2) 能带计算       1.\t进入指定文件夹及查看相关文件    使用cat命令查看band.input文件：  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun  2.\t使用pbs排队系统进行自洽计算    能带计算的输入文件为band.input文件，因此需要修改下提交任务的脚本，为了不覆盖之前使用的rescu.pbs脚本。我们使用cp命令将rescu.pbs复制并重命名为band.pbs。  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun    vi打开band.pbs并将RESCU –smi -i scf.input改为RESCU –smi -i band.input。  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun    在/home/hzw/RESCU_example/Si/REAL目录下使用qsub band.pbs进行能带计算，并通过qstat命令进行计算任务查看。  [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun    在任务计算过程中可以通过tail –f 命令来实时输出RESCUlog.out文件的内容：（tail –f命令可以通过Ctrl + c命令退出）   [hzw@hzwhpc ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun   3.\t输出日志文件及结果查看     能带计算结束后，在计算目录会产生输出日志文件：RESCUlog.out文件，能带数据文件BandStructure.txt和计算结果文件夹results，在results中存在着主要输出文件会产生主要的输出文件：Si_bs.mat和Si_bs.h5。   4.\t生成能带图及能带数据分析     计算结束之后，用户可以使用Si_bs.mat生成能带图，具体操作如下： 首先，加载RESCU环境：source /public/Hzwtech/RESCUPackage/RESCU_env； 之后，在计算目录输入：RESCU -p ./results/Si_bs.mat命令调用RESCU进行画图，其中-p为plot的简写，./results/Si_bs.mat表示调用当前文件夹下results文件夹下的Si_bs.mat文件。     两条命令运行结束之后计算目录已经生成了Si_bs_plot.fig，将该文件在matlab中打开，如果用在一体机中没有安装matlab，建议用户将该文件下载到有matlab的电脑上进行查看。     得到能带结构图如下：     图4-1 Si的能带图    使用cat命令查看BandStructure.txt文件，可以看到BandStructure.txt有524行数据，第1行只有一个数字12，代表高对称点数目；第2行是高对称点的字母表示；第3行是高对称点对应的序号；第4行有三个数字260、8、1，其分别表示K点数目能带数目、体系是否有自旋，1表示体系没有自旋；第5-264行是260个K点的坐标；第265-524行是8条能带的数据。   Notes：能带计算需要调用自洽计算的结果，因此必须要先进行自洽计算之后才能进行能带计算。更多的能带计算参数请详见RESCU应用教程。           (3) 态密度计算       1.\t进入指定文件夹及查看相关文件     使用cat命令查看dos.input文件：   2.\t使用pbs排队系统进行自洽计算     态密度计算的输入文件为dos.input文件，同样的需要修改下提交任务的脚本。我们使用cp命令将rescu.pbs复制并重命名为dos.pbs。     vi打开dos.pbs并将RESCU –smi -i scf.input改为RESCU –smi -i dos.input。 在/home/hzw/RESCU_example/Si/REAL目录下使用qsub dos.pbs进行能带计算，并通过qstat命令进行计算任务查看。   3.\t输出日志文件及结果查看     态密度计算结束后，在计算目录会产生输出日志文件：RESCUlog.out文件，态密度数据文件DensityOfStates.txt和计算结果文件夹results，在results中存在着主要输出文件会产生主要的输出文件：Si_dos.mat和Si_dos.h5。   4.\t生成能带图及能带数据分析     计算结束之后，用户可以使用Si_dos.mat生成能带图，具体操作如下： 首先，加载RESCU环境：source /public/Hzwtech/RESCUPackage/RESCU_env； 之后，在计算目录输入：RESCU -p ./results/Si_dos.mat命令调用RESCU进行画图。 两条命令运行结束之后计算目录已经生成了Si_dos_plot.fig，将该文件在matlab中打开，如果用在一体机中没有安装matlab，建议用户将该文件下载到有matlab的电脑上进行查看。 得到能带结构图如下：   图4-2 Si的总态密度图    使用cat命令查看DensityOfStates.txt文件，可以看到DensityOfStates.txt有1001行数据，第1行有三个数字1000 1 1，1000代表指定能量范围内的能量点个数、1代表总态密度、1代表degenerate；第2-6表示是否开了投影态密度；7-1006行表示每一个能量点对应的态密度值。   Notes：态密度计算只需要调用自洽计算的结果，并不需要能带计算结果，这里放在能带计算之后只是个人习惯而已。这里只演示了总态密度计算的过程。投影态密度、局域态密度的等更多计算案例请详见RESCU应用教程。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/first-examples/",
        "teaser":null},{
        "title": "FIRST软件的使用介绍",
        "excerpt":"4.1.\tFIRST软件介绍 FIRST(Molecular Materials Property Prediction Package)是一款研究和设计有机分子材料发光和传输机理以及定量预测发光效率的软件。目前广泛应用于OLED发光和传输机理研究、新型OLED设计以及有机显示与照明材料、有机场效应材料、有机太阳能电池、以及有机光检测、生物传感、有机光通讯等领域。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/first-manual/",
        "teaser":null},{
        "title": "First快速使用手册",
        "excerpt":"  First鸿之微一体机是鸿之微开发的一款科学模拟平台。   First….。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/first-quick-guide/",
        "teaser":null},{
        "title": "常见问题",
        "excerpt":"  鸿之微“一体机”是基于CentOS Linux，并且在此基础上搭配鸿之微自行研发的计算模拟软件以及图形界面软件Device studio。本章节仅是帮助用户解决日常使用中遇到的常见问题，如果用户遇到其它问题可以在互联网上搜索相关信息或者联系公司客服support@hzwtech.com来解决。   安装应用程序    CentOS linux系统集成了软件库功能，其中包含大量的已经编译好的免费应用软件，这些应用软件一般都是通用软件，并且存放在公共开放的网站上。     如果用户想要安装其他计算模拟软件，建议用户另外新建一个用户，不要安装在hzwtech账户中，同时不推荐把相应的环境变量加载到公共登陆脚本。因为这样操作有可能会出现跟原有的系统软件或者鸿之微软件冲突，导致鸿之微“一体机”无法正常使用。一般出现这种问题，表现出来的症状都是千奇百怪的，如果用户没有经验的话，很难找到问题的根源。   修改网络设置    鸿之微“一体机”安装时候时网络设置为自动获取ipDHCP模式。如果在您的网络环境允许使用自动获取ipDHCP模式，则不必修改。否则，您需要将网络设置为静态ip模式，并手动设置ip地址、网关地址、子网掩码、域名服务器等（这些信息需要咨询您处网络管理员）。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/frequently-asked-question/",
        "teaser":null},{
        "title": "MOMAP软件的使用介绍",
        "excerpt":"4.1.\tMOMAP软件介绍 MOMAP(Molecular Materials Property Prediction Package)是一款研究和设计有机分子材料发光和传输机理以及定量预测发光效率的软件。目前广泛应用于OLED发光和传输机理研究、新型OLED设计以及有机显示与照明材料、有机场效应材料、有机太阳能电池、以及有机光检测、生物传感、有机光通讯等领域。 4.2.\tMOMAP安装环境 一体机版MOMAP安装目录为：/public/Hzwtech/MOMAP。在该目录下我们还安装了一些运行MOMAP所需要的软件，如momap-1.0.2.dev-mpich2，mpich2，lapack，fftw等。在目录momap下的MOMAP_env文件即为MOMAP运行所需的环境变量配置文件。用户可以在Linux终端中使用source命令加载该配置文件，即运行：source /public/Hzwtech/MOMAP/ momap-1.0.2.dev-mpich2/MOMAP_env。此时可以通过which 命令确认环境是否加载完成。例如：   4.3.\tMOMAP软件使用 一体机版MOMAP与单机版MOMAP在使用上基本一致。我们将选取MOMAP应用教程中Azulene体系为例，通过量化计算、光谱、辐射速率和非辐射速率的计算为用户演示一体机版MOMAP的使用。更多相关案例可登录MOMAP官网http://www.momap.net.cn/，参考《MOMAP用户使用手册》。 注：该简单教程为使用终端（terminal）进行MOMAP计算，请用户先鼠标右键打开一个终端（terminal）。 Azulene体系 （1）量化计算     进入指定文件夹及查看相关文件 使用cd命令进入案例Azulene体系量化计算的文件夹:/home/hzw/MOMAP_example/Azulene/gaossian 使用ls命令查看gaussian目录下的文件夹   其中后缀为com的文件为高斯软件的输入文件，后缀为log、chk和fchk的文件为高斯软件的输出文件。其中基态的输入文件azulene-s0.com可以用cat命令查看：   这里计算高斯任务需用户自备高斯软件。计算后会得到azulene-s0.log、azulene-s0.chk结果。使用formchk使用formchk命令转化二进制的checkpoint文件为文本文件：formchk azulene-s0.chk，将会得到azulene-s0.fchk。 激发态的输入文件azulene-s1.com可以用cat命令查看：  计算后会得到azulene-s1.log、azulene-s1.chk结果。使用formchk使用formchk命令转化二进制的checkpoint文件为文本文件：formchk azulene-s1.chk，将会得到azulene-s1.fchk。 （2）振动分析 收集上一部分计算得到的基态和激发态的计算结果文件，包括日志文件（azulene-s0.log、azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk、azulene-s1.fchk），注意需保证振动结果无虚频（在频率计算文件中搜索Frequencies，注意F大写，可以找到频率信息），将这些文件都放在一个文件夹（evc）中，evc计算需要的输入文件包含红色框内：  用cat命令查看momap.inp文件：  用cat命令查看nodefile文件：   evc这一步计算时间比较短，不需要调用pbs排队系统执行任务，可直接运行momap -input momap.inp -nodefile nodefile，程序正常结束后，得到下一步计算的输入文件evc.cart.dat（或evc.dint.dat）。 （3）辐射速率 这一步的文件可以用ls查看：   其中红色框内为输入文件，可以用cat命令查看momap.inp文件：  在一体机中使用的是pbs排队系统来提交MOMAP计算任务，相应的命令都写在momap.pbs脚本中，使用cat命令查看momap.pbs文件：   其中source /public/Hzwtech/MOMAP/momap-1.0.2.dev-mpich2/MOMAP_env和source /public/Hzwtech/MOMAP/momap-1.0.2.dev-mpich2/bin/.environment为加载运行MOMAP所需的环境变量。 momap -input $jobname -nodefile $PBS_NODEFILE为运行命令。 使用qsub momap.pbs进行计算，并通过qstat命令进行计算任务查看。   计算结束后，在计算目录会产生输出文件：spec.tvcf.fo.dat、spec.tvcf.ft.dat、spec.tvcf.log、spec.tvcf.spec.dat。其中在spec.tvcf.log文件末端可以查找到辐射速率。   Notes：如果需要修改输入文件，可以通过使用vi命令实现，具体使用见Linux基础。 （4）非辐射速率     计算内转换过程不仅需要分子基态S0与激发态S1的构型优化结果、频率计算结果，还需要包含与非绝热耦合矩阵元相关的azulene-nacme.log文件。非绝热耦合计算时使用的计算方法、泛函等尽量与构型优化时保持一致。 使用cat命令查看kic/nacme/azulene-nacme.com文件：   使用高斯计算后得到azulene-nacme.log输出文件。     收集高斯计算的基态、激发态计算结果文件，包括日志文件（azulene-s0.log和azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk和azulene-s1.fchk），还有与非绝热耦合矩阵元相关的azulene-nacme.log文件。将这些文件都放在目录azulene/kic/evc/中。其中这一步的输入文件如图红框内所示：   evc这一步计算时间比较短，不需要调用pbs排队系统执行任务，可直接运行momap -input momap.inp -nodefile nodefile，程序正常结束后，得到下一步计算的输入文件evc.cart.dat和evc.cart.nac。     收集上一步计算的evc.cart.dat和evc.cart.nac，构建momap.inp、nodefile和momap.pbs。红色框内为输入文件： 收集高斯计算的基态、激发态计算结果文件，包括日志文件（azulene-s0.log和azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk和azulene-s1.fchk），还有与非绝热耦合矩阵元相关的azulene-nacme.log文件。将这些文件都放在目录azulene/kic/evc/中。其中这一步的输入文件如图红框内所示：   可以用cat命令查看momap.inp：   cat命令查看momap.pbs：   使用qsub命令提交任务，计算后得到ic.tvcf.fo.dat、ic.tvcf.ft.dat、ic.tvcf.log。其中非辐射速率在ic.tvcf.log文件末端，如图所示：  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/momap-examples/",
        "teaser":null},{
        "title": "MOMAP软件使用教程",
        "excerpt":"MOMAP软件介绍    MOMAP(Molecular Materials Property Prediction Package)是一款研究和设计有机分子材料发光和传输机理以及定量预测发光效率的软件。目前广泛应用于OLED发光和传输机理研究、新型OLED设计以及有机显示与照明材料、有机场效应材料、有机太阳能电池、以及有机光检测、生物传感、有机光通讯等领域。  MOMAP安装环境    一体机版MOMAP安装目录为：/public/Hzwtech/MOMAP。在该目录下我们还安装了一些运行MOMAP所需要的软件，如momap-1.0.2.dev-mpich2，mpich2，lapack，fftw等。在目录momap下的MOMAP_env文件即为MOMAP运行所需的环境变量配置文件。用户可以在Linux终端中使用source命令加载该配置文件，即运行：source /public/Hzwtech/MOMAP/ momap-1.0.2.dev-mpich2/MOMAP_env。此时可以通过which 命令确认环境是否加载完成。例如：   MOMAP软件使用    一体机版MOMAP与单机版MOMAP在使用上基本一致。我们将选取MOMAP应用教程中Azulene体系为例，通过量化计算、光谱、辐射速率和非辐射速率的计算为用户演示一体机版MOMAP的使用。更多相关案例可登录MOMAP官网http://www.momap.net.cn/，参考《MOMAP用户使用手册》。 注：该简单教程为使用终端（terminal）进行MOMAP计算，请用户先鼠标右键打开一个终端（terminal）。 Azulene体系 （1）量化计算     进入指定文件夹及查看相关文件 使用cd命令进入案例Azulene体系量化计算的文件夹:/home/hzw/MOMAP_example/Azulene/gaossian 使用ls命令查看gaussian目录下的文件夹   其中后缀为com的文件为高斯软件的输入文件，后缀为log、chk和fchk的文件为高斯软件的输出文件。其中基态的输入文件azulene-s0.com可以用cat命令查看：   这里计算高斯任务需用户自备高斯软件。计算后会得到azulene-s0.log、azulene-s0.chk结果。使用formchk使用formchk命令转化二进制的checkpoint文件为文本文件：formchk azulene-s0.chk，将会得到azulene-s0.fchk。 激发态的输入文件azulene-s1.com可以用cat命令查看：  计算后会得到azulene-s1.log、azulene-s1.chk结果。使用formchk使用formchk命令转化二进制的checkpoint文件为文本文件：formchk azulene-s1.chk，将会得到azulene-s1.fchk。 （2）振动分析 收集上一部分计算得到的基态和激发态的计算结果文件，包括日志文件（azulene-s0.log、azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk、azulene-s1.fchk），注意需保证振动结果无虚频（在频率计算文件中搜索Frequencies，注意F大写，可以找到频率信息），将这些文件都放在一个文件夹（evc）中，evc计算需要的输入文件包含红色框内：  用cat命令查看momap.inp文件：  用cat命令查看nodefile文件：   evc这一步计算时间比较短，不需要调用pbs排队系统执行任务，可直接运行momap -input momap.inp -nodefile nodefile，程序正常结束后，得到下一步计算的输入文件evc.cart.dat（或evc.dint.dat）。 （3）辐射速率 这一步的文件可以用ls查看：   其中红色框内为输入文件，可以用cat命令查看momap.inp文件：  在一体机中使用的是pbs排队系统来提交MOMAP计算任务，相应的命令都写在momap.pbs脚本中，使用cat命令查看momap.pbs文件：   其中source /public/Hzwtech/MOMAP/momap-1.0.2.dev-mpich2/MOMAP_env和source /public/Hzwtech/MOMAP/momap-1.0.2.dev-mpich2/bin/.environment为加载运行MOMAP所需的环境变量。 momap -input $jobname -nodefile $PBS_NODEFILE为运行命令。 使用qsub momap.pbs进行计算，并通过qstat命令进行计算任务查看。   计算结束后，在计算目录会产生输出文件：spec.tvcf.fo.dat、spec.tvcf.ft.dat、spec.tvcf.log、spec.tvcf.spec.dat。其中在spec.tvcf.log文件末端可以查找到辐射速率。   Notes：如果需要修改输入文件，可以通过使用vi命令实现，具体使用见Linux基础。 （4）非辐射速率     计算内转换过程不仅需要分子基态S0与激发态S1的构型优化结果、频率计算结果，还需要包含与非绝热耦合矩阵元相关的azulene-nacme.log文件。非绝热耦合计算时使用的计算方法、泛函等尽量与构型优化时保持一致。 使用cat命令查看kic/nacme/azulene-nacme.com文件：   使用高斯计算后得到azulene-nacme.log输出文件。     收集高斯计算的基态、激发态计算结果文件，包括日志文件（azulene-s0.log和azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk和azulene-s1.fchk），还有与非绝热耦合矩阵元相关的azulene-nacme.log文件。将这些文件都放在目录azulene/kic/evc/中。其中这一步的输入文件如图红框内所示：   evc这一步计算时间比较短，不需要调用pbs排队系统执行任务，可直接运行momap -input momap.inp -nodefile nodefile，程序正常结束后，得到下一步计算的输入文件evc.cart.dat和evc.cart.nac。     收集上一步计算的evc.cart.dat和evc.cart.nac，构建momap.inp、nodefile和momap.pbs。红色框内为输入文件： 收集高斯计算的基态、激发态计算结果文件，包括日志文件（azulene-s0.log和azulene-s1.log）和格式化的Checkpoint文件（azulene-s0.fchk和azulene-s1.fchk），还有与非绝热耦合矩阵元相关的azulene-nacme.log文件。将这些文件都放在目录azulene/kic/evc/中。其中这一步的输入文件如图红框内所示：   可以用cat命令查看momap.inp：   cat命令查看momap.pbs：   使用qsub命令提交任务，计算后得到ic.tvcf.fo.dat、ic.tvcf.ft.dat、ic.tvcf.log。其中非辐射速率在ic.tvcf.log文件末端，如图所示：  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/momap-manual/",
        "teaser":null},{
        "title": "MOMAP快速使用手册",
        "excerpt":"  MOMAP鸿之微一体机是鸿之微开发的一款科学模拟平台。     MOMAP是基于NEGF-DFT的材料计算和电子器件量子输运模拟的通用大型计算软件程序包，主要用于模拟器件材料中的非线性、非平衡的量子输运过程，是目前最先进的基于第一性原理的输运软件。MOMAP可以用于材料物性、分子电子学、自旋电子学、光电流、半导体电子学器件设计等方面的研究工作。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/momap-quick-guide/",
        "teaser":null},{
        "title": "Nanodcal案例",
        "excerpt":"演示案例：黑磷结构    案例文件夹： /home/hzwtech/soft_test/nanodcal_test/BP/BackElectrode   Device Studio软件介绍    Device Studio（DS）作为鸿之微平台型的图形界面软件，能够进行电子器件的结构搭建与仿真；能够进行晶体结构和纳米器件的建模；能够生成Nanodcal、MOMAP、RESCU、VASP、Gaussian、NWChem、PWmat、STEMS的输入文件并进行存储和管理；可以根据用户需要将输入文件传递给远程或当地的Nanodcal、RESCU、MOMAP、PWmat、STEMS软件进行计算，并控制计算流程；可以将计算结果进行可视化显示和分析。     本案例中将演示如何使用Device Studio在鸿之微Nanodcal一体机完成整个计算流程。   计算流程   1. Device Studio建模及生成对应的输入文件          打开本地机器上的Device Studio软件，新建一个文件夹，如图：              点击左上角的File-Import Local，找到blackphosphorus.hzw文件并点击Open （*\\DeviceStudio\\material\\2Dmaterials\\Novelty_material），如图：             得到BP的结构，如图：              点击菜单栏Build-Redefine Crystal，在OA方向选择扩胞6倍，点击Preview进行预览，再Build即可，如图：              通过快捷键 3D Viewer ，沿着xz view查看视图，如下：              点击菜单栏Build-Convert to Device，根据输运方向选择对应的电极类型。本例中输运方向为OA，即x方向，固选择电极类型为Front与Back electrode,点击Build，转换为器件，如图：             器件的结构模型如下图：              生成Nanodcal的自洽的输入文件： 点击Simulator-Nanodcal-SCF Calculation生成Nanodcal的自洽的输入文件。在本例中我们将Basic settings中的k-point Sampling设置为[1,1,10]，其余采用默认值。之后点击Generate files生成自洽计算输入文件。如下图：             通过以上步骤就生成了Nanodcal的自洽的输入文件scf.input，可在Project栏进行查看，如图：             当然如果要生成其他计算文件，比如电子透射谱的输入文件，可通过以下方式：点击Simulator-Nanodcal-Analysis生成电子透射谱的输入文件。如图：        注意：实际计算过程中K点数目需要测试。随着K增多，选择一个稳定的数值下的最小K点数目。           在Project窗口即可看到对应的输入文件，如图：             右击要查看的文件，选择Open Containing Folder即可找到文件所在位置进行查看。       2. 自洽计算     2.1 将上述文件通过Xftp软件上传到一体机的指定计算目录即可进行计算，比如：/home/hzwtech/soft_test/nanodcal_test。     2.2 我们以文件夹：/home/hzwtech/soft_test/nanodcal_test/BP为例：           使用cd命令进入案例BP体系的文件夹: /home/hzwtech/soft_test/nanodcal_test/BP/BackElectrode            使用ls命令查看BackElectrode目录下的文件，对于自洽计算而言，需要准备参数文件scf.input和基组文件P_LDA-DZP.nad。            拷贝作业脚本文件到此目录：cp /public/pbs_script_example/nanodcal.pbs ./            修改计算资源：根据具体情况，如修改为开启4个超线程，调用16核的计算资源，即 nodes=1:ppn=16，-n 4             输入命令qsub nanodcal.pbs，开始Nanodcal计算,总共需要大约35s。            /home/hzwtech/soft_test/nanodcal_test/BP/FrontElectrode 自洽同上            /home/hzwtech/soft_test/nanodcal_test/BP/Device 自洽同上       3. 能带计算     3.1 使用cd命令进入案例BP体系的文件夹:/home/hzwtech/soft_test/nanodcal_test/BP/BackElectrode     3.2 自洽完成后，进行能带计算。能带输入文件如下：   [hzwtech@hzwtech BackElectrode]$ cat BandStructure.input system.object = NanodcalObject.mat calculation.name = bandstructure calculation.bandStructure.symmetryKPoints = {'G','X','S','Y','G'}  %%根据实际需求修改 %calculation.bandStructure.coordinatesOfTheSymmetryKPoints = [0 0 0;0 0 0.5;0.5 0 0.5;0.5 0 0;0 0 0] calculation.bandStructure.numberOfKPoints = 200 calculation.bandStructure.plot = true calculation.control.xml = true    3.3 修改nanodcal.pbs文件：   mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit scf.input\" 修改为： mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit BandStructure.input\"    3.4 递交计算即可qsub nanodcal.pbs     3.5 输出文件：BandStructure.fig 和 BandStructure.mat     3.6 下载数据到本地计算机后，打开MATLAB界面，画图有两种方法：   第一种：» nanodcal -plot bandstructure BandStructure.mat   第二种：直接双击BandStructure.fig文件,如图：    更多案例的计算以及数据处理过程，请参考Nanodcal中文应用教程。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/nanodcal-examples/",
        "teaser":null},{
        "title": "Nanodcal软件使用教程",
        "excerpt":"Nanodcal软件介绍     Nanodcal是一款基于非平衡格林函数-密度泛函理论（NEGF-DFT）的第一性原理软件，主要应用于模拟器件材料中的非线性、非平衡的量子输运过程，是目前国内唯一一款拥有自主知识产权的基于第一性原理的输运软件。可预测材料的电流-电压特性，电子透射几率等众多输运性质。     迄今为止，Nanodcal已成功应用于1维、2维、3维、无自旋、共线自旋、非共线自旋材料物性、分子电子器件、自旋电子器件、光电流器件、多电极器件、半导体电子器件设计等重要研究课题中，并将逐步推广到更广阔的电子输运性质研究的领域。   Nanodcal安装环境     鸿之微Nanodcal“一体机”已经预装Nanodcal，用户不需要自行安装，可以直接调用。Nanodcal预装在/software/Nanodcal目录中，其中包含了Nanodcal的程序、文档和实例。下面将根据案例，介绍如何运行Nanodcal软件。     在该目录下我们还安装了一些运行Nanodcal所需要的软件，如MATLAB、OPENMPI等。Nanodcal是基于Matlab语言开发，数据密集部分采用C语言，Matlab-C组合保证了Nanodcal计算效率，是目前为止最为高效的LCAO代码。故而编译安装Nanodcal之前需提前安装Matlab软件和对应的C编译器。为了满足库函数编译的要求，还需要安装Openmpi并行环境来提高并行的效率。     用户可以在Linux终端中使用module load和module unload命令加载或卸载Nanodcal运行所需的环境变量配置文件，即运行：module load mpi/openmpi-1.8.5-RESCU。此时可以通过which 命令确认环境是否加载完成。需要注意的是，一体机中安装了多个mpi，使用特定mpi时请先module unload当前的mpirun例如：   [hzwtech@hzwtech ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun [hzwtech@hzwtech ~]$ module unload mpi/openmpi-1.8.5 [hzwtech@hzwtech ~]$ module load mpi/openmpi-1.8.5-Nanodcal [hzwtech@hzwtech Nanodcal]$ module load Matlab/R2015B   用户可以通过which 命令确认环境是否加载完成。例如：   [hzwtech@hzwtech Nanodcal]$ which matlab /software/MatlabR2015B/bin/matlab [hzwtech@hzwtech Nanodcal]$ which mpirun /public/mpi/openmpi-1.8.5-Nanodcal/bin/mpirun   Nanodcal软件使用     Nanodcal的作业递交脚本及需要加载的环境变量参见/public/pbs_script_example目录下的nanodcal.pbs文件。您可以将nanodcal.pbs文件，使用cp命令拷贝到您需要进行计算的目录，然后使用qsub nanodcal.pbs命令，提交任务，进行计算。您可以按照您的具体需求适当修改nanodcal.pbs文件的内容。     在用户主目录下有一个文件夹（soft_test）,其中存放了一些Nanodcal的例子。我们以一个黑磷的器件体系为例，通过学习这个例子可以快速了解如何在鸿之微Nanodcal“一体机”中使用Nanodcal软件。   单机运行      需要先加载Nanodcal软件的环境变量：            module load gcc/4.7.4-Nanodcal       module unload mpi/openmpi-1.8.5       module load mpi/openmpi-1.8.5-Nanodcal       module load Matlab/R2015B           首先进入工作目录：cd /home/hzwtech/soft_test/nanodcal_test/BP   在这个目录中存在四个文件：            BackElectrode       Device       FrontElectrode       P_LDA-DZP.nad           进入工作目录：cd /BackElectrode            输入：matlab -nodisplay       输入：nanodcal scf.input           在这个目录中存在一个文件：scf.input（系统的输入文件）   自洽计算完成，需要28s时间。   计算结果：日志文件log.txt和数据文件NanodcalObject.mat   并行计算      进入工作目录：cd /BackElectrode   在这个目录中存在一个文件：scf.input（系统的输入文件）   拷贝作业脚本文件到此目录：cp /public/pbs_script_example/nanodcal.pbs ./   修改计算资源：根据具体情况，如修改为开启4个超线程，调用16核的计算资源，即 nodes=1:ppn=16，-n 4    输入下面的命令，开始Nanodcal计算,总共需要大约1分钟。 qsub nanodcal.pbs   查看任务运行状态：qstat            如果状态是Q，说明任务在排队中，等待其它任务计算完成；       如果状态是R，说明任务正在计算中，请耐心等待；       如果状态是C，说明任务已经完成，可以查看计算结果。           计算结果：日志文件log.txt和数据文件NanodcalObject.mat   演示案例：F-C-B的黑磷器件体系      案例文件夹：/home/hzwtech/soft_test/nanodcal_test/BP   计算内容：自洽、能带、电子透射谱   计算步骤：            电极的自洽计算       中心区的自洽计算       物理性质计算：电子透射谱计算、态密度计算           1.\t电极的自洽计算      使用cd命令进入案例BP体系的文件夹: /home/hzwtech/soft_test/nanodcal_test/BP   [hzwtech@hzwtech BP]$ ll total 424 drwxrwxr-x. 2 hzwtech hzwtech     55 Jul  8 16:43 BackElectrode drwxrwxr-x. 2 hzwtech hzwtech     78 Jul  8 13:58 Device drwxrwxr-x. 2 hzwtech hzwtech     62 Jul  8 13:58 FrontElectrode -rw-rw-r--. 1 hzwtech hzwtech 433119 Jul  8 13:58 P_LDA-DZP.nad [hzwtech@hzwtech BP]$ cd BackElectrode/ [hzwtech@hzwtech BackElectrode]$      再切换到BackElectrode目录，对于自洽计算而言，需要准备参数文件scf.input和基组文件P_LDA-DZP.nad。使用cat命令查看scf.input文件：   [hzwtech@hzwtech BackElectrode]$ cat scf.input %%What quantities should be calculated calculation.name = scf  %%定义计算内容   %Basic setting calculation.occupationFunction.temperature = 100 calculation.realspacegrids.E_cutoff = 80 Hartree calculation.xcFunctional.Type = LDA_PZ81    %%定义交换关联泛函 calculation.k_spacegrids.number = [ 100 1 10 ]'  %% K点数目：真空取1   system.centralCellVectors = [[4.374 0 0]' [0 15 0]' [0 0 3.3133]'] %%晶格基矢 system.spinType = NoSpin   %%没有自旋   %Iteration control calculation.SCF.monitoredVariableName = {'rhoMatrix','hMatrix','totalEnergy','bandEnergy','gridCharge','orbitalCharge'} calculation.SCF.convergenceCriteria = {1e-04,1e-04,[],[],[],[]}  %%收敛标准 calculation.SCF.maximumSteps = 200 calculation.SCF.mixMethod = Pulay  %%自洽方法 calculation.SCF.mixRate = 0.1 calculation.SCF.mixingMode = H calculation.SCF.startingMode = H %calculation.SCF.donatorObject = NanodcalObject.mat    %Basic set system.neutralAtomDataDirectory = '../'  %%../代表上一个目录 system.atomBlock = 4                     %%原子总数 AtomType OrbitalType X Y Z P\tLDA-DZP\t1.44604440\t6.41709180\t0.82832500 P\tLDA-DZP\t0.74095560\t8.58290820\t0.82832500 P\tLDA-DZP\t2.92795560\t6.41709180\t2.48497500 P\tLDA-DZP\t3.63304440\t8.58290820\t2.48497500 end      准备好输入文件之后，就可以在一体机上递交作业了。      PBS系统作业递交方法     拷贝作业脚本文件到当前目录：cp /public/pbs_script_example/nanodcal.pbs ./     修改需要计算资源：根据具体情况，如修改为开启4个超线程，调用16核的计算资源，即 nodes=1:ppn=16，-n 4      输入命令qsub nanodcal.pbs，提交Nanodcal计算，此案例总共需要大约35s。   注：mpirun -hostfile $PBS_NODEFILE -npernode 4 matlab -nodisplay -r “nanodcal -parallel -doexit scf.input” 调用4个核进行Nanodcal的并行计算。其中scf.input是输入文件的名字，请用户根据计算的文件名字来进行相应的修改。调用多少核数也是根据用户体系大小情况进行变动。      查看任务运行状态：qstat     [hzwtech@hzwtech BackElectrode]$ qstat Job ID                    Name             User            Time Use S Queue ------------------------- ---------------- --------------- -------- - ----- 19.hzwtech                 ...dcal_job_name hzwtech                0 R batch           输出日志文件及结果查看   -rw-rw-r--. 1 hzwtech hzwtech     293 Jul  8 16:56 CalculatedResults.mat -rw-------. 1 hzwtech hzwtech       0 Jul  8 16:55 _err.dat -rw-rw-r--. 1 hzwtech hzwtech    4929 Jul  8 16:56 log.txt             %%日志文件 -rw-rw-r--. 1 hzwtech hzwtech 5795894 Jul  8 16:56 NanodcalObject.mat  %%数据文件 -rw-r--r--. 1 hzwtech hzwtech     445 Jul  8 14:16 nanodcal.pbs -rw-------. 1 hzwtech hzwtech    6245 Jul  8 16:56 _out.dat -rw-rw-r--. 1 hzwtech hzwtech    1094 Jul  8 13:58 scf.input drwxrwxr-x. 2 hzwtech hzwtech      10 Jul  8 16:56 temporarydata       %%临时存储文件夹 -rw-rw-r--. 1 hzwtech hzwtech     179 Jul  8 16:56 TotalEnergy.mat     /home/hzwtech/soft_test/nanodcal_test/BP/FrontElectrode 自洽同上   2. 中心区的自洽计算           使用cd命令进入案例BP体系的文件夹: /home/hzwtech/soft_test/nanodcal_test/BP/Device            使用ls命令查看/Device目录下的文件，对于自洽计算而言，需要准备参数文件scf.input和基组文件P_LDA-DZP.nad。scf.input如下：       [hzwtech@hzwtech Device]$ cat scf.input %%What quantities should be calculated calculation.name = scf   %Basic setting calculation.occupationFunction.temperature = 100 calculation.realspacegrids.E_cutoff = 80 Hartree calculation.xcFunctional.Type = LDA_PZ81 calculation.k_spacegrids.number = [ 1 1 10 ]'   %%K点数目：真空，输运方向取1，周期取多   %Description of electrode system.numberOfLeads = 2 system.typeOfLead1 = front         %%跟输运方向相关 system.voltageOfLead1 = 0 system.objectOfLead1 = ../FrontElectrode/NanodcalObject.mat system.typeOfLead2 = back system.voltageOfLead2 = 0 system.objectOfLead2 = ../BackElectrode/NanodcalObject.mat   %Contour integral %calculation.complexEcontour.lowestEnergyPoint = 1.5 Hartree calculation.complexEcontour.numberOfPoints = 40 calculation.realEcontour.interval = 0.0272114 calculation.realEcontour.eta = 0.0272114   system.centralCellVectors = [[26.244 0 0]' [0 15 0]' [0 0 3.3133]'] system.spinType = NoSpin   %Iteration control calculation.SCF.monitoredVariableName = {'rhoMatrix','hMatrix','totalEnergy','bandEnergy','gridCharge','orbitalCharge'} calculation.SCF.convergenceCriteria = {1e-04,1e-04,[],[],[],[]} calculation.SCF.maximumSteps = 200 calculation.SCF.mixMethod = Pulay calculation.SCF.mixRate = 0.1 calculation.SCF.mixingMode = H calculation.SCF.startingMode = H %calculation.SCF.donatorObject = NanodcalObject.mat    %Basic set system.neutralAtomDataDirectory = '../' system.atomBlock = 24 AtomType OrbitalType X Y Z P\tLDA-DZP\t0.74095560\t8.58290820\t0.82832500 P\tLDA-DZP\t25.50304440\t8.58290820\t2.48497500 P\tLDA-DZP\t24.79795560\t6.41709180\t2.48497500 P\tLDA-DZP\t1.44604440\t6.41709180\t0.82832500 P\tLDA-DZP\t23.31604440\t6.41709180\t0.82832500 P\tLDA-DZP\t22.61095560\t8.58290820\t0.82832500 P\tLDA-DZP\t2.92795560\t6.41709180\t2.48497500 P\tLDA-DZP\t3.63304440\t8.58290820\t2.48497500 P\tLDA-DZP\t5.82004440\t6.41709180\t0.82832500 P\tLDA-DZP\t10.19404440\t6.41709180\t0.82832500 P\tLDA-DZP\t14.56804440\t6.41709180\t0.82832500 P\tLDA-DZP\t18.94204440\t6.41709180\t0.82832500 P\tLDA-DZP\t5.11495560\t8.58290820\t0.82832500 P\tLDA-DZP\t9.48895560\t8.58290820\t0.82832500 P\tLDA-DZP\t13.86295560\t8.58290820\t0.82832500 P\tLDA-DZP\t18.23695560\t8.58290820\t0.82832500 P\tLDA-DZP\t7.30195560\t6.41709180\t2.48497500 P\tLDA-DZP\t11.67595560\t6.41709180\t2.48497500 P\tLDA-DZP\t16.04995560\t6.41709180\t2.48497500 P\tLDA-DZP\t20.42395560\t6.41709180\t2.48497500 P\tLDA-DZP\t8.00704440\t8.58290820\t2.48497500 P\tLDA-DZP\t12.38104440\t8.58290820\t2.48497500 P\tLDA-DZP\t16.75504440\t8.58290820\t2.48497500 P\tLDA-DZP\t21.12904440\t8.58290820\t2.48497500 end           PBS系统作业递交方法: 拷贝作业脚本文件到此目录，执行：qsub nanodcal.pbs            输出日志文件及结果查看       -rw-rw-r--. 1 hzwtech hzwtech     293 Jul  8 16:56 CalculatedResults.mat -rw-------. 1 hzwtech hzwtech       0 Jul  8 16:55 _err.dat -rw-rw-r--. 1 hzwtech hzwtech    4929 Jul  8 16:56 log.txt             %%日志文件 -rw-rw-r--. 1 hzwtech hzwtech 5795894 Jul  8 16:56 NanodcalObject.mat  %%数据文件 -rw-r--r--. 1 hzwtech hzwtech     445 Jul  8 14:16 nanodcal.pbs -rw-------. 1 hzwtech hzwtech    6245 Jul  8 16:56 _out.dat -rw-rw-r--. 1 hzwtech hzwtech    1094 Jul  8 13:58 scf.input drwxrwxr-x. 2 hzwtech hzwtech      10 Jul  8 16:56 temporarydata       %%临时存储文件夹 -rw-rw-r--. 1 hzwtech hzwtech     179 Jul  8 16:56 TotalEnergy.mat  注：根据输运方向的不同，电极类型也所不同，参见文件：cat /software/Nanodcal/documentations/input-reference.pdf：   left：[0 0 -1] means the direction of -z right：[0 0 1] means the direction of +z top：[0 1 0] means the direction of +y bottom：[0 -1 0] means the direction of -y front：[-1 0 0]\tmeans the direction of -x back： [1 0 0] means the direction of +x   3. 能带计算           使用cd命令进入案例BP体系的文件夹: /home/hzwtech/soft_test/nanodcal_test/BP/BackElectrode            准备好计算能带的文件BandStructure.input，上传到此目录。       [hzwtech@hzwtech BackElectrode]$ cat BandStructure.input system.object = NanodcalObject.mat calculation.name = bandstructure %calculation.bandStructure.symmetryKPoints = {'G','X','S','Y','G'} %calculation.bandStructure.coordinatesOfTheSymmetryKPoints = [0 0 0;0 0 0.5;0.5 0 0.5;0.5 0 0;0 0 0] calculation.bandStructure.numberOfKPoints = 200 calculation.bandStructure.plot = true calculation.control.xml = true      修改nanodcal.pbs文件：   mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit scf.input\" 修改为： mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit BandStructure.input\"          递交计算即可qsub nanodcal.pbs            输出文件：BandStructure.fig 和 BandStructure.mat       4. 电子透射谱计算           使用cd命令进入案例BP体系的文件夹: /home/hzwtech/soft_test/nanodcal_test/BP/Device            准备好计算电子透射谱的文件Transmission.input，上传到此目录。       [hzwtech@hzwtech Device]$ cat Transmission.input system.object = NanodcalObject.mat calculation.name = transmission calculation.transmission.kSpaceGridNumber = [ 1 1 100 ]  %%K点选取 calculation.transmission.energyPoints = [-2:0.02:2]  %%能量范围 calculation.transmission.plot = true calculation.control.xml = true      修改nanodcal.pbs文件：   mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit scf.input\" 修改为： mpirun -hostfile $PBS_NODEFILE -n 4  matlab -nodisplay -r \"nanodcal -parallel -doexit Transmission.input\"          递交计算即可qsub nanodcal.pbs            输出文件：Transmission.fig 和 Transmission.mat            下载数据到本地计算机后，打开MATLAB界面，画图有两种方法：       第一种：» nanodcal -plot transmission Transmission.mat   第二种：直接双击Transmission.fig文件   更多案例的计算以及数据处理过程，请参考Nanodcal中文应用教程。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/nanodcal-manual/",
        "teaser":null},{
        "title": "Nanodcal快速使用手册",
        "excerpt":"  鸿之微Nanodcal“一体机”已经预装Nanodcal，用户不需要自行安装，可以直接调用。Nanodcal预装在/software/Nanodcal目录中，其中包含了Nanodcal的程序、文档和实例。     Nanodcal的作业递交脚本及需要加载的环境变量参见/public/pbs_script_example目录下的nanodcal.pbs文件。您可以将nanodcal.pbs文件，使用cp命令拷贝到您需要进行计算的目录，然后使用qsub nanodcal.pbs命令，提交任务，进行计算。您可以按照您的具体需求适当修改nanodcal.pbs文件的内容。   例如，你有一个输入文件input.txt，那么只需要在命令行终端中输入“nanodcal.sh input.txt”就可以直接开始计算。这样操作只是进行串行计算，如果用户需要进行并行计算需要加载环境变量脚本，所使用的命令是“source /home/hzw/bin/nanodcal_environment.sh”，然后在命令行终端中输入“mpirun -n 8 nanodcal.sh -parallel input.txt”就可以进行并行计算，其中并行进程数可以根据实际情况修改，但不要超过器件模拟一体机的总核数。     在用户根目录下有一个文件夹（nanodcal_guide）,其中存放了一些nanodcal的例子。这些例子都包含输入文件以及作业管理系统的提交脚本。nanodcal程序的使用方法，请用户自行查阅nanodcal的帮助文件，此处不在重复说明。     我们以一个周期性系统为例，其它的几个例子的使用方法都相同的。通过学习这些例子可以了解如何在鸿之微Nanodcal“一体机”中使用nanodcal。     首先进入工作目录：cd nanodcal_guide/bulk   在这个目录中存在两个文件：bulk.input（系统的输入文件）和run.sh（作业管理系统的提交脚本）   输入下面的命令，开始nanodcal计算，我们使用8核进行计算，总共需要大约1分钟。 qsub run.sh   在nanodcal计算过程中可以使用qstat命令查看计算任务的运行状态。如果状态是Q，说明任务在排队中，等待其它任务计算完成；如果状态是R，说明任务正在计算中，请耐心等待；如果状态是C，说明任务已经完成，可以查看计算结果。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/nanodcal-quick-guide/",
        "teaser":null},{
        "title": "RESCU案例",
        "excerpt":"Si体系(无自旋体系degenerate)的自洽、能带、态密度计算  一、自洽计算          1. 进入指定文件夹及查看相关文件         使用cd命令进入案例Si体系的文件夹:/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL 使用ls命令查看REAL目录下的文件，对于自洽计算而言需要准备主要参数文件scf.input，原子结构文件Atom.xyz和基组文件Si_DZP.mat。     使用cat命令查看scf.input文件：   [hzwtech@hzwtech REAL]$ cat scf.input info.calculationType = 'self-consistent' info.savepath        = './results/Si_scf' domain.latvec        = [[0 2.715 2.715]; [2.715 0 2.715]; [2.715 2.715 0]] element(1).species   = 'Si' element(1).path      = './Si_DZP.mat' atom.xyz         = './Atom.xyz' kpoint.gridn         = [7,7,7] domain.lowres        = 0.6 units.length        = 'Angstrom'    使用cat命令查看Atom.xyz文件：   [hzwtech@hzwtech REAL]$ cat Atom.xyz 2 AtomType  X Y Z   Si        0.67883750        0.67883750        0.67883750   Si        2.03651250        2.03651250        2.03651250           2. 使用pbs排队系统进行自洽计算         在一体机中使用的是pbs排队系统来提交RESCU计算任务，相应的命令都写在rescu.pbs脚本中，而rescu.pbs脚本存放在/home/hzwtech/Desktop/pbs_script_example目录下。     使用cp命令将rescu.pbs文件复制到/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL。  [hzwtech@hzwtech REAL]$ cd /home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL [hzwtech@hzwtech REAL]$ cp /home/hzwtech/Desktop/pbs_script_example/rescu.pbs . [hzwtech@hzwtech REAL]$ ls # 使用ls命令查看是否复制成功。 Atom.xyz  band.input  dos.input  rescu.pbs  scf.input  Si_DZP.mat     在/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL目录下使用qsub rescu.pbs进行自洽计算，并通过qstat命令进行计算任务查看。  [hzwtech@hzwtech REAL]$ qsub rescu.pbs 23.hzwtech [hzwtech@hzwtech REAL]$ qstat Job ID                    Name             User            Time Use S Queue ------------------------- ---------------- --------------- -------- - ----- 23.hzwtech                 rescu_job_name   hzwtech                0 R batch           3.\t输出日志文件及结果查看        自洽结束后，在计算目录会产生输出日志文件：resculog.out文件和计算结果文件夹results，在results中存在着主要输出文件Si_scf.mat和Si_scf.h5。       如果需要修改scf.input或者Atom.xyz文件，可以通过使用vi命令实现。   真实的计算案例中请用户谨慎的选取实空间格点数目domain.lowres及倒空间格点数目 kpoint.gridn，这两个参数与计算结果的精度和可靠性休戚相关，其中domain.lowres尽量不大于0.4。   自洽计算的输出文件Si_scf.mat和Si_scf.h5需要使用matlab来加载，如果一体机中用户没有安装matlab，用户可以将Si_scf.mat和Si_scf.h5下载到本地电脑用matlab进行加载查看。   在计算过程中用户需要查看resculog.out文件中## PARALLEL ##的内容来确认是否开启了mpirun并行和scalapack并行，resculog.out文件中：Number of processes = 4表示计算中mpirun并行所调用的核数；Parallel config (smi,gpu,k-para) = (1,0,0) 表示开启了scalapack并行进行加速，其中smi表示的就是scalapack。在计算过程中请务必确保并行信息无误。   二、 能带计算           1.\t进入指定文件夹及查看相关文件        使用cat命令查看band.input文件：      [hzwtech@hzwtech REAL]$ cat band.input info.calculationType = 'band-structure' info.savepath        = './results/Si_bs' rho.in               = 'results/Si_scf'                2.\t使用pbs排队系统进行自洽计算        能带计算的输入文件为band.input文件，因此需要修改下提交任务的脚本，为了不覆盖之前使用的rescu.pbs脚本。我们使用cp命令将rescu.pbs复制并重命名为band.pbs。       [hzwtech@hzwtech REAL]$ cp rescu.pbs band.pbs     vi打开band.pbs，将最后一行中rescu --smi -i scf.input改为rescu --smi -i band.input。   [hzwtech@hzwtech REAL]$ cat band.pbs #!/bin/sh #PBS -N rescu_job_name #PBS -o _out.dat #PBS -e _err.dat #PBS -q batch #PBS -l nodes=1:ppn=1 #PBS -l walltime=240:00:00  # load the needed environment path  module load gcc/4.7.4-RESCU module unload mpi/openmpi-1.8.5 module load mpi/openmpi-1.8.5-RESCU module load Matlab/R2015B  NCPU=`wc -l &lt; $PBS_NODEFILE` cd $PBS_O_WORKDIR  source /software/rescu-2.1.0/barc mpirun --map-by node:PE=1 matlab -nojvm -nosplash -nodisplay -singleCompThread -r \"addpath(genpath('/software/rescu-2.1.0/src'));rescu --smi -i band.input\"     在/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL目录下使用qsub band.pbs进行自洽计算，并通过qstat命令进行计算任务查看。  [hzwtech@hzwtech REAL]$ qsub band.pbs 23.hzwtech [hzwtech@hzwtech REAL]$ qstat Job ID                    Name             User            Time Use S Queue ------------------------- ---------------- --------------- -------- - ----- 24.hzwtech                 rescu_job_name   hzwtech                0 R batch     在任务计算过程中可以通过tail –f命令来实时输出resculog.out文件的内容：（tail –f命令可以通过Ctrl + c命令退出）           3.\t输出日志文件及结果查看         能带计算结束后，在计算目录会产生输出日志文件：resculog.out文件，能带数据文件BandStructure.txt和计算结果文件夹results，在results中存在着主要输出文件会产生主要的输出文件：Si_bs.mat和Si_bs.h5。           4.\t生成能带图及能带数据分析         计算结束之后，用户可以使用Si_bs.mat生成能带图，具体操作如下： 首先，加载RESCU环境：  module load Matlab/R2015B matlab -nojvm -nosplash -nodisplay -singleCompThread -r \"addpath(genpath('/software/rescu-2.1.0/src'));\"    之后，在计算目录输入：rescu -p ./results/Si_bs.mat命令调用RESCU进行画图，其中-p为plot的简写，./results/Si_bs.mat表示调用当前文件夹下results文件夹下的Si_bs.mat文件。     两条命令运行结束之后计算目录已经生成了Si_bs_plot.fig，将该文件在matlab中打开，如果用在一体机中没有安装matlab，建议用户将该文件下载到有matlab的电脑上进行查看。     得到能带结构图如下：      图1. Si的能带图    使用cat命令查看BandStructure.txt文件，可以看到BandStructure.txt有524行数据，第1行只有一个数字12，代表高对称点数目；第2行是高对称点的字母表示；第3行是高对称点对应的序号；第4行有三个数字260、8、1，其分别表示K点数目能带数目、体系是否有自旋，1表示体系没有自旋；第5-264行是260个K点的坐标；第265-524行是8条能带的数据。   注：能带计算需要调用自洽计算的结果，因此必须要先进行自洽计算之后才能进行能带计算。   三、 态密度计算           1.\t进入指定文件夹及查看相关文件         使用cat命令查看dos.input文件：  [hzwtech@hzwtech REAL]$ cat dos.input info.calculationType = 'dos' info.savepath        = './results/Si_dos' rho.in               = './results/Si_scf' kpoint.sampling ='tetrahedron+blochl' kpoint.gridn         = [15,15,15] smearing.sigma = 0.01; dos.range = [-5 , 5] dos.resolution = 0.01 smearing.sigma = 0.01 units.energy = 'eV'           2.\t使用pbs排队系统进行自洽计算         态密度计算的输入文件为dos.input文件，同样的需要修改下提交任务的脚本。我们使用cp命令将rescu.pbs复制并重命名为dos.pbs。   [hzwtech@hzwtech REAL]$ cp rescu.pbs dos.pbs     vi打开dos.pbs并将rescu --smi -i scf.input改为rescu --smi -i dos.input。 在/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL目录下使用qsub dos.pbs进行能带计算，并通过qstat命令进行计算任务查看。           3.\t输出日志文件及结果查看         态密度计算结束后，在计算目录会产生输出日志文件：resculog.out文件，态密度数据文件DensityOfStates.txt和计算结果文件夹results，在results中存在着主要输出文件会产生主要的输出文件：Si_dos.mat和Si_dos.h5。           4.\t生成能带图及能带数据分析         计算结束之后，用户可以使用Si_bs.mat生成能带图，具体操作如下： 首先，加载RESCU环境：  module load Matlab/R2015B matlab -nojvm -nosplash -nodisplay -singleCompThread -r \"addpath(genpath('/software/rescu-2.1.0/src'));\"    之后，在计算目录输入：rescu -p ./results/Si_dos.mat命令调用RESCU进行画图，其中-p为plot的简写，./results/Si_bs.mat表示调用当前文件夹下results文件夹下的Si_bs.mat文件。     两条命令运行结束之后计算目录已经生成了Si_dos_plot.fig，将该文件在matlab中打开，如果用在一体机中没有安装matlab，建议用户将该文件下载到有matlab的电脑上进行查看。   得到态密度结构图如下：   图2. Si的总态密度图    使用cat命令查看DensityOfStates.txt文件，可以看到DensityOfStates.txt有1001行数据，第1行有三个数字1000 1 1，1000代表指定能量范围内的能量点个数、1代表总态密度、1代表degenerate；第2-6表示是否开了投影态密度；7-1006行表示每一个能量点对应的态密度值。   注：态密度计算只需要调用自洽计算的结果，并不需要能带计算结果，这里放在能带计算之后只是个人习惯而已。这里只演示了总态密度计算的过程。投影态密度、局域态密度的等更多计算案例请详见RESCU应用教程。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/rescu-examples/",
        "teaser":null},{
        "title": "RESCU软件使用教程",
        "excerpt":"RESCU软件介绍     RESCU(Real space Electronic Structure CalcUlator)，由于其新颖的算法和超高的并行效率，使其在大体系下有着很抢眼的表现，在使用相同资源及不牺牲精度的情况下能够计算更大体系的电子结构；同时 RESCU 适用于各类计算资源，从笔记本电脑、桌面单机、到16核、64核、256核、到更大的超算、包括用 GPU 加速等等，可以用来计算一千、数千、上万乃至更大体系的电子结构性质。RESCU 是解决超大体系 KS-DFT 问题的里程碑式的新方法，正在被应用于金属、半导体、绝缘体、液体、DNA、1维、2维、3维、表面、分子、磁性、非磁性、杂质、固体等等不同系统的 KS-DFT 计算。   RESCU安装环境     一体机版RESCU安装目录为：/software/rescu-2.1.0。在/public目录下我们还安装了一些运行RESCU所需要的软件，如openmpi，scalapack，lapack，openblas，libxc，mcr等。用户可以在Linux终端中使用module load和module unload命令加载或卸载RESCU运行所需的环境变量配置文件，即运行：module load mpi/openmpi-1.8.5-RESCU。此时可以通过which 命令确认环境是否加载完成。需要注意的是，一体机中安装了多个mpi，使用特定mpi时请先module unload当前的mpirun例如：   [hzwtech@hzwtech ~]$ which mpirun /public/mpi/openmpi-1.8.5/bin/mpirun [hzwtech@hzwtech ~]$ module unload mpi/openmpi-1.8.5 [hzwtech@hzwtech ~]$ module load mpi/openmpi-1.8.5-RESCU [hzwtech@hzwtech ~]$ which mpirun /public/mpi/openmpi-1.8.5-RESCU/bin/mpirun   RESCU软件使用    一体机版RESCU与单机版RESCU在使用上基本一致，唯一的区别在于一体机版的RESCU是在Linux下使用命令行的方法运行RESCU，而单机版的RESCU是在matlab中输入运行命令运行RESCU。因此我们将选取RESCU应用教程中Si体系为例，通过自洽、能带和态密度的计算为用户演示一体机版RESCU的使用。其他RESCU应用教程中的案例用户可以根据该案例自行练习。   注： 该简单教程为使用终端（terminal）进行RESCU计算，请用户先鼠标右键打开一个终端（terminal）。   在terminal终端下运行RESCU软件   1. 进入指定文件夹及查看相关文件     使用cd命令进入案例的文件夹:/home/hzwtech/Desktop/software_test_example。解压Si体系案例文件压缩包：tar -zxvf rescu_example_Si.tar.gz。切换到Si体系案例文件夹中：cd rescu_example_Si。使用ls命令查看REAL目录下的文件，对于自洽计算而言需要准备主要参数文件scf.input，原子结构文件Atom.xyz和基组文件Si_DZP.mat。     使用cat命令查看scf.input文件：   [hzwtech@hzwtech REAL]$ cat scf.input info.calculationType = 'self-consistent' info.savepath        = './results/Si_scf' domain.latvec        = [[0 2.715 2.715]; [2.715 0 2.715]; [2.715 2.715 0]] element(1).species   = 'Si' element(1).path      = './Si_DZP.mat' atom.xyz         = './Atom.xyz' kpoint.gridn         = [7,7,7] domain.lowres        = 0.6 units.length        = 'Angstrom'    使用cat命令查看Atom.xyz文件：   [hzwtech@hzwtech REAL]$ cat Atom.xyz 2 AtomType  X Y Z   Si        0.67883750        0.67883750        0.67883750   Si        2.03651250        2.03651250        2.03651250   2. 使用pbs排队系统进行自洽计算     在一体机中使用的是pbs排队系统来提交RESCU计算任务，相应的命令都写在rescu.pbs脚本中，而rescu.pbs脚本存放在/home/hzwtech/Desktop/pbs_script_example目录下。     使用cp命令将rescu.pbs文件复制到/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL。  [hzwtech@hzwtech REAL]$ cd /home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL [hzwtech@hzwtech REAL]$ cp /home/hzwtech/Desktop/pbs_script_example/rescu.pbs . [hzwtech@hzwtech REAL]$ ls # 使用ls命令查看是否复制成功。 Atom.xyz  band.input  dos.input  rescu.pbs  scf.input  Si_DZP.mat     使用cat命令查看rescu.pbs文件：  [hzwtech@hzwtech REAL]$ cat rescu.pbs #!/bin/sh #PBS -N rescu_job_name #PBS -o _out.dat #PBS -e _err.dat #PBS -q batch #PBS -l nodes=1:ppn=1 #PBS -l walltime=240:00:00  # load the needed environment path  module load gcc/4.7.4-RESCU module unload mpi/openmpi-1.8.5 module load mpi/openmpi-1.8.5-RESCU module load Matlab/R2015B  NCPU=`wc -l &lt; $PBS_NODEFILE` cd $PBS_O_WORKDIR  source /software/rescu-2.1.0/barc mpirun --map-by node:PE=1 matlab -nojvm -nosplash -nodisplay -singleCompThread -r \"addpath(genpath('/software/rescu-2.1.0/src'));rescu --smi -i scf.input\"      module前面的为pbs排队系统中的固定格式，具体含义详见作业管理系统pbs介绍。module命令为加载RESCU计算所需要的环境，这里我们只介绍module之后的命令。   第一句：source /software/rescu-2.1.0/barc为加载运行RESCU所需的环境变量，该barc文件内容为export OPENBLAS_NUM_THREADS=1，意为声明OpenBLAS的进程数。   第二句：为使用mpirun和scalapack进行RESCU并行计算。更细节的理解如下：rescu –smi -i scf.input中–smi表示在RESCU计算过程中将使用scalapack并行加速，-i scf.input表示RESCU计算过程中将scf.input作为输入（input）的文件，i即为input的简写。     在/home/hzwtech/Desktop/software_test_example/rescu_example_Si/REAL目录下使用qsub rescu.pbs进行自洽计算，并通过qstat命令进行计算任务查看。  [hzwtech@hzwtech REAL]$ qsub rescu.pbs 23.hzwtech [hzwtech@hzwtech REAL]$ qstat Job ID                    Name             User            Time Use S Queue ------------------------- ---------------- --------------- -------- - ----- 23.hzwtech                 rescu_job_name   hzwtech                0 R batch   3.\t输出日志文件及结果查看     自洽结束后，在计算目录会产生输出日志文件：resculog.out文件和计算结果文件夹results，在results中存在着主要输出文件Si_scf.mat和Si_scf.h5。   更详细的案例请参考RESCU案例。   注：正确完成计算需要提前准备好License，否则将会出现报错，在_err.out文件中可以找到License validation failed. No license.dat file.等报错信息。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/rescu-manual/",
        "teaser":null},{
        "title": "RESCU快速使用手册",
        "excerpt":"  鸿之微RESCU“一体机”已经预装RESCU，用户不需要自行安装，可以直接调用。RESCU预装在/software/rescu-2.1.0目录中，其中包含了RESCU的程序、文档和实例。     RESCU的作业递交脚本及需要加载的环境变量参见/public/pbs_script_example目录下的rescu.pbs文件。您可以将rescu.pbs文件，使用cp命令拷贝到您需要进行计算的目录，然后使用qsub rescu.pbs命令，提交任务，进行计算。您可以按照您的具体需求适当修改rescu.pbs文件的内容。   例如，你有一个输入文件input.txt，那么只需要在命令行终端中输入“rescu.sh -i input.txt”就可以直接开始计算。这样操作只是进行串行计算，如果用户需要进行并行计算需要加载环境变量脚本，所使用的命令是“source /home/hzw/bin/rescu_environment.sh”，然后在命令行终端中输入“mpirun -n 8 rescu.sh -i input.txt”就可以进行并行计算，其中并行进程数可以根据实际情况修改，但不要超过器件模拟一体机的总核数。     在用户根目录下有一个文件夹（rescu_guide）,其中存放了一些RESCU的例子。这些例子都包含输入文件以及作业管理系统的提交脚本。RESCU程序的使用方法，请用户自行查阅RESCU的帮助文件，此处不在重复说明。     我们以一个周期性系统为例，其它的几个例子的使用方法都相同的。通过学习这些例子可以了解如何在鸿之微RESCU“一体机”中使用RESCU。     首先进入工作目录：cd rescu_guide/si   在这个目录中存在两个文件：si.txt、si.xyz、Si_DZP.mat（系统的输入文件）和run.sh（作业管理系统的提交脚本）   输入下面的命令，开始rescu计算，我们使用4核进行计算，总共需要大约1分钟。 qsub run.sh   在rescu计算过程中可以使用qstat命令查看计算任务的运行状态。如果状态是Q，说明任务在排队中，等待其它任务计算完成；如果状态是R，说明任务正在计算中，请耐心等待；如果状态是C，说明任务已经完成，可以查看计算结果。  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/rescu-quick-guide/",
        "teaser":null},{
        "title": "鸿之微“一体机”-快速使用手册",
        "excerpt":"  鸿之微“一体机”是鸿之微精心打造的具有“一”流“体”验的高性能计算一体“机”。致力于为客户量身定制材料模拟解决方案，同时提供相关技术支持服务，为客户的科研项目顺利进行顺利开展提供贴心保障。     在本页为您提供了鸿之微“一体机”快速使用手册和各软件的详细使用教程以及一些计算案例。   软硬件平台简介   硬件平台    鸿之微“一体机”根据各搭载计算软件的不同计算特性，针对性设计了不同的硬件配置方案，以利于各软件发挥出最佳的计算性能。客户可以根据实际需求进行选择最适合自己的方案。   系统平台    鸿之微“一体机”的操作系统选择CentOS 7.6，桌面环境在预装的GNOME、KDE之外，鸿之微还为您定制了Cinnamon桌面环境，Cinnamon桌面具有接近Windows操作习惯等优点，以助您在初次接触Linux系统桌面计算时获得最优良的用户体验。您可以根据自己的使用习惯选择喜欢或习惯的桌面环境。     鸿之微“一体机”默认设置一个普通用户：默认用户名为hzwtech,默认密码为hzw@123。   预装软件    鸿之微“一体机”在各对应计算软件外，还均为您安装     Device studio图形界面材料设计软件、   GCC通用编译器   OpenMPI并行计算环境   Torque pbs作业管理系统   Environment Modules环境变量管理工具     鸿之微“一体机”可以方便用户使用和扩展功能，免去用户自行安装相应软件的麻烦。      继续学习鸿之微“一体机”教程-操作系统使用简介  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/hzwsoftware/yitiji-introduce/",
        "teaser":null},]
